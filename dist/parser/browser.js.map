{"version":3,"file":"browser.js","sources":["../../node_modules/xml-js/lib/xml2js.js","../../node_modules/sax/lib/sax.js","../../node_modules/xml-js/lib/options-helper.js","../../node_modules/xml-js/lib/array-helper.js","../../node_modules/xml-js/lib/js2xml.js","../../compiled/definitions/VAST3.js","../../node_modules/xml-js/lib/xml2json.js","../../compiled/parser/index.js"],"sourcesContent":["var sax = require('sax');\r\nvar expat /*= require('node-expat');*/ = { on: function () { }, parse: function () { } };\r\nvar helper = require('./options-helper');\r\nvar isArray = require('./array-helper').isArray;\r\n\r\nvar options;\r\nvar pureJsParser = true;\r\nvar currentElement;\r\n\r\nfunction validateOptions(userOptions) {\r\n  options = helper.copyOptions(userOptions);\r\n  helper.ensureFlagExists('ignoreDeclaration', options);\r\n  helper.ensureFlagExists('ignoreInstruction', options);\r\n  helper.ensureFlagExists('ignoreAttributes', options);\r\n  helper.ensureFlagExists('ignoreText', options);\r\n  helper.ensureFlagExists('ignoreComment', options);\r\n  helper.ensureFlagExists('ignoreCdata', options);\r\n  helper.ensureFlagExists('ignoreDoctype', options);\r\n  helper.ensureFlagExists('compact', options);\r\n  helper.ensureFlagExists('alwaysArray', options);\r\n  helper.ensureFlagExists('alwaysChildren', options);\r\n  helper.ensureFlagExists('addParent', options);\r\n  helper.ensureFlagExists('trim', options);\r\n  helper.ensureFlagExists('nativeType', options);\r\n  helper.ensureFlagExists('sanitize', options);\r\n  helper.ensureFlagExists('instructionHasAttributes', options);\r\n  helper.ensureFlagExists('captureSpacesBetweenElements', options);\r\n  helper.ensureKeyExists('declaration', options);\r\n  helper.ensureKeyExists('instruction', options);\r\n  helper.ensureKeyExists('attributes', options);\r\n  helper.ensureKeyExists('text', options);\r\n  helper.ensureKeyExists('comment', options);\r\n  helper.ensureKeyExists('cdata', options);\r\n  helper.ensureKeyExists('doctype', options);\r\n  helper.ensureKeyExists('type', options);\r\n  helper.ensureKeyExists('name', options);\r\n  helper.ensureKeyExists('elements', options);\r\n  helper.ensureKeyExists('parent', options);\r\n  helper.checkFnExists('doctype', options);\r\n  helper.checkFnExists('instruction', options);\r\n  helper.checkFnExists('cdata', options);\r\n  helper.checkFnExists('comment', options);\r\n  helper.checkFnExists('text', options);\r\n  helper.checkFnExists('instructionName', options);\r\n  helper.checkFnExists('elementName', options);\r\n  helper.checkFnExists('attributeName', options);\r\n  helper.checkFnExists('attributeValue', options);\r\n  helper.checkFnExists('attributes', options);\r\n  return options;\r\n}\r\n\r\nfunction nativeType(value) {\r\n  var nValue = Number(value);\r\n  if (!isNaN(nValue)) {\r\n    return nValue;\r\n  }\r\n  var bValue = value.toLowerCase();\r\n  if (bValue === 'true') {\r\n    return true;\r\n  } else if (bValue === 'false') {\r\n    return false;\r\n  }\r\n  return value;\r\n}\r\n\r\nfunction addField(type, value) {\r\n  var key;\r\n  if (options.compact) {\r\n    if (!currentElement[options[type + 'Key']] && options.alwaysArray) {\r\n      currentElement[options[type + 'Key']] = [];\r\n    }\r\n    if (currentElement[options[type + 'Key']] && !isArray(currentElement[options[type + 'Key']])) {\r\n      currentElement[options[type + 'Key']] = [currentElement[options[type + 'Key']]];\r\n    }\r\n    if (type + 'Fn' in options && typeof value === 'string') {\r\n      value = options[type + 'Fn'](value, currentElement);\r\n    }\r\n    if (type === 'instruction' && ('instructionFn' in options || 'instructionNameFn' in options)) {\r\n      for (key in value) {\r\n        if (value.hasOwnProperty(key)) {\r\n          if ('instructionFn' in options) {\r\n            value[key] = options.instructionFn(value[key], key, currentElement);\r\n          } else {\r\n            var temp = value[key];\r\n            delete value[key];\r\n            value[options.instructionNameFn(key, temp, currentElement)] = temp;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (isArray(currentElement[options[type + 'Key']])) {\r\n      currentElement[options[type + 'Key']].push(value);\r\n    } else {\r\n      currentElement[options[type + 'Key']] = value;\r\n    }\r\n  } else {\r\n    if (!currentElement[options.elementsKey]) {\r\n      currentElement[options.elementsKey] = [];\r\n    }\r\n    var element = {};\r\n    element[options.typeKey] = type;\r\n    if (type === 'instruction') {\r\n      for (key in value) {\r\n        if (value.hasOwnProperty(key)) {\r\n          break;\r\n        }\r\n      }\r\n      element[options.nameKey] = 'instructionNameFn' in options ? options.instructionNameFn(key, value, currentElement) : key;\r\n      if (options.instructionHasAttributes) {\r\n        element[options.attributesKey] = value[key][options.attributesKey];\r\n        if ('instructionFn' in options) {\r\n          element[options.attributesKey] = options.instructionFn(element[options.attributesKey], key, currentElement);\r\n        }\r\n      } else {\r\n        if ('instructionFn' in options) {\r\n          value[key] = options.instructionFn(value[key], key, currentElement);\r\n        }\r\n        element[options.instructionKey] = value[key];\r\n      }\r\n    } else {\r\n      if (type + 'Fn' in options) {\r\n        value = options[type + 'Fn'](value, currentElement);\r\n      }\r\n      element[options[type + 'Key']] = value;\r\n    }\r\n    if (options.addParent) {\r\n      element[options.parentKey] = currentElement;\r\n    }\r\n    currentElement[options.elementsKey].push(element);\r\n  }\r\n}\r\n\r\nfunction manipulateAttributes(attributes) {\r\n  if ('attributesFn' in options && attributes) {\r\n    attributes = options.attributesFn(attributes, currentElement);\r\n  }\r\n  if ((options.trim || 'attributeValueFn' in options || 'attributeNameFn' in options) && attributes) {\r\n    var key;\r\n    for (key in attributes) {\r\n      if (attributes.hasOwnProperty(key)) {\r\n        if (options.trim) attributes[key] = attributes[key].trim();\r\n        if ('attributeValueFn' in options) attributes[key] = options.attributeValueFn(attributes[key], key, currentElement);\r\n        if ('attributeNameFn' in options) {\r\n          var temp = attributes[key];\r\n          delete attributes[key];\r\n          attributes[options.attributeNameFn(key, attributes[key], currentElement)] = temp;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return attributes;\r\n}\r\n\r\nfunction onInstruction(instruction) {\r\n  var attributes = {};\r\n  if (instruction.body && (instruction.name.toLowerCase() === 'xml' || options.instructionHasAttributes)) {\r\n    var attrsRegExp = /([\\w:-]+)\\s*=\\s*(?:\"([^\"]*)\"|'([^']*)'|(\\w+))\\s*/g;\r\n    var match;\r\n    while ((match = attrsRegExp.exec(instruction.body)) !== null) {\r\n      attributes[match[1]] = match[2] || match[3] || match[4];\r\n    }\r\n    attributes = manipulateAttributes(attributes);\r\n  }\r\n  if (instruction.name.toLowerCase() === 'xml') {\r\n    if (options.ignoreDeclaration) {\r\n      return;\r\n    }\r\n    currentElement[options.declarationKey] = {};\r\n    if (Object.keys(attributes).length) {\r\n      currentElement[options.declarationKey][options.attributesKey] = attributes;\r\n    }\r\n    if (options.addParent) {\r\n      currentElement[options.declarationKey][options.parentKey] = currentElement;\r\n    }\r\n  } else {\r\n    if (options.ignoreInstruction) {\r\n      return;\r\n    }\r\n    if (options.trim) {\r\n      instruction.body = instruction.body.trim();\r\n    }\r\n    var value = {};\r\n    if (options.instructionHasAttributes && Object.keys(attributes).length) {\r\n      value[instruction.name] = {};\r\n      value[instruction.name][options.attributesKey] = attributes;\r\n    } else {\r\n      value[instruction.name] = instruction.body;\r\n    }\r\n    addField('instruction', value);\r\n  }\r\n}\r\n\r\nfunction onStartElement(name, attributes) {\r\n  var element;\r\n  if (typeof name === 'object') {\r\n    attributes = name.attributes;\r\n    name = name.name;\r\n  }\r\n  attributes = manipulateAttributes(attributes);\r\n  if ('elementNameFn' in options) {\r\n    name = options.elementNameFn(name, currentElement);\r\n  }\r\n  if (options.compact) {\r\n    element = {};\r\n    if (!options.ignoreAttributes && attributes && Object.keys(attributes).length) {\r\n      element[options.attributesKey] = {};\r\n      var key;\r\n      for (key in attributes) {\r\n        if (attributes.hasOwnProperty(key)) {\r\n          element[options.attributesKey][key] = attributes[key];\r\n        }\r\n      }\r\n    }\r\n    if (!(name in currentElement) && options.alwaysArray) {\r\n      currentElement[name] = [];\r\n    }\r\n    if (currentElement[name] && !isArray(currentElement[name])) {\r\n      currentElement[name] = [currentElement[name]];\r\n    }\r\n    if (isArray(currentElement[name])) {\r\n      currentElement[name].push(element);\r\n    } else {\r\n      currentElement[name] = element;\r\n    }\r\n  } else {\r\n    if (!currentElement[options.elementsKey]) {\r\n      currentElement[options.elementsKey] = [];\r\n    }\r\n    element = {};\r\n    element[options.typeKey] = 'element';\r\n    element[options.nameKey] = name;\r\n    if (!options.ignoreAttributes && attributes && Object.keys(attributes).length) {\r\n      element[options.attributesKey] = attributes;\r\n    }\r\n    if (options.alwaysChildren) {\r\n      element[options.elementsKey] = [];\r\n    }\r\n    currentElement[options.elementsKey].push(element);\r\n  }\r\n  // if (options.addParent) {\r\n    element[options.parentKey] = currentElement;\r\n  // }\r\n  currentElement = element;\r\n}\r\n\r\nfunction onText(text) {\r\n  if (options.ignoreText) {\r\n    return;\r\n  }\r\n  if (!text.trim() && !options.captureSpacesBetweenElements) {\r\n    return;\r\n  }\r\n  if (options.trim) {\r\n    text = text.trim();\r\n  }\r\n  if (options.nativeType) {\r\n    text = nativeType(text);\r\n  }\r\n  if (options.sanitize) {\r\n    text = text.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\r\n  }\r\n  addField('text', text);\r\n}\r\n\r\nfunction onComment(comment) {\r\n  if (options.ignoreComment) {\r\n    return;\r\n  }\r\n  if (options.trim) {\r\n    comment = comment.trim();\r\n  }\r\n  addField('comment', comment);\r\n}\r\n\r\nfunction onEndElement(name) {\r\n  var parentElement = currentElement[options.parentKey];\r\n  if (!options.addParent) {\r\n    delete currentElement[options.parentKey];\r\n  }\r\n  currentElement = parentElement;\r\n}\r\n\r\nfunction onCdata(cdata) {\r\n  if (options.ignoreCdata) {\r\n    return;\r\n  }\r\n  if (options.trim) {\r\n    cdata = cdata.trim();\r\n  }\r\n  addField('cdata', cdata);\r\n}\r\n\r\nfunction onDoctype(doctype) {\r\n  if (options.ignoreDoctype) {\r\n    return;\r\n  }\r\n  doctype = doctype.replace(/^ /, '');\r\n  if (options.trim) {\r\n    doctype = doctype.trim();\r\n  }\r\n  addField('doctype', doctype);\r\n}\r\n\r\nfunction onError(error) {\r\n  error.note = error; //console.error(error);\r\n}\r\n\r\nmodule.exports = function (xml, userOptions) {\r\n\r\n  var parser = pureJsParser ? sax.parser(true, {}) : parser = new expat.Parser('UTF-8');\r\n  var result = {};\r\n  currentElement = result;\r\n\r\n  options = validateOptions(userOptions);\r\n\r\n  if (pureJsParser) {\r\n    parser.onopentag = onStartElement;\r\n    parser.ontext = onText;\r\n    parser.oncomment = onComment;\r\n    parser.onclosetag = onEndElement;\r\n    parser.onerror = onError;\r\n    parser.oncdata = onCdata;\r\n    parser.ondoctype = onDoctype;\r\n    parser.onprocessinginstruction = onInstruction;\r\n  } else {\r\n    parser.on('startElement', onStartElement);\r\n    parser.on('text', onText);\r\n    parser.on('comment', onComment);\r\n    parser.on('endElement', onEndElement);\r\n    parser.on('error', onError);\r\n    //parser.on('startCdata', onStartCdata);\r\n    //parser.on('endCdata', onEndCdata);\r\n    //parser.on('entityDecl', onEntityDecl);\r\n  }\r\n\r\n  if (pureJsParser) {\r\n    parser.write(xml).close();\r\n  } else {\r\n    if (!parser.parse(xml)) {\r\n      throw new Error('XML parsing error: ' + parser.getError());\r\n    }\r\n  }\r\n\r\n  if (result[options.elementsKey]) {\r\n    var temp = result[options.elementsKey];\r\n    delete result[options.elementsKey];\r\n    result[options.elementsKey] = temp;\r\n    delete result.text;\r\n  }\r\n\r\n  return result;\r\n\r\n};\r\n",";(function (sax) { // wrapper for non-node envs\n  sax.parser = function (strict, opt) { return new SAXParser(strict, opt) }\n  sax.SAXParser = SAXParser\n  sax.SAXStream = SAXStream\n  sax.createStream = createStream\n\n  // When we pass the MAX_BUFFER_LENGTH position, start checking for buffer overruns.\n  // When we check, schedule the next check for MAX_BUFFER_LENGTH - (max(buffer lengths)),\n  // since that's the earliest that a buffer overrun could occur.  This way, checks are\n  // as rare as required, but as often as necessary to ensure never crossing this bound.\n  // Furthermore, buffers are only tested at most once per write(), so passing a very\n  // large string into write() might have undesirable effects, but this is manageable by\n  // the caller, so it is assumed to be safe.  Thus, a call to write() may, in the extreme\n  // edge case, result in creating at most one complete copy of the string passed in.\n  // Set to Infinity to have unlimited buffers.\n  sax.MAX_BUFFER_LENGTH = 64 * 1024\n\n  var buffers = [\n    'comment', 'sgmlDecl', 'textNode', 'tagName', 'doctype',\n    'procInstName', 'procInstBody', 'entity', 'attribName',\n    'attribValue', 'cdata', 'script'\n  ]\n\n  sax.EVENTS = [\n    'text',\n    'processinginstruction',\n    'sgmldeclaration',\n    'doctype',\n    'comment',\n    'opentagstart',\n    'attribute',\n    'opentag',\n    'closetag',\n    'opencdata',\n    'cdata',\n    'closecdata',\n    'error',\n    'end',\n    'ready',\n    'script',\n    'opennamespace',\n    'closenamespace'\n  ]\n\n  function SAXParser (strict, opt) {\n    if (!(this instanceof SAXParser)) {\n      return new SAXParser(strict, opt)\n    }\n\n    var parser = this\n    clearBuffers(parser)\n    parser.q = parser.c = ''\n    parser.bufferCheckPosition = sax.MAX_BUFFER_LENGTH\n    parser.opt = opt || {}\n    parser.opt.lowercase = parser.opt.lowercase || parser.opt.lowercasetags\n    parser.looseCase = parser.opt.lowercase ? 'toLowerCase' : 'toUpperCase'\n    parser.tags = []\n    parser.closed = parser.closedRoot = parser.sawRoot = false\n    parser.tag = parser.error = null\n    parser.strict = !!strict\n    parser.noscript = !!(strict || parser.opt.noscript)\n    parser.state = S.BEGIN\n    parser.strictEntities = parser.opt.strictEntities\n    parser.ENTITIES = parser.strictEntities ? Object.create(sax.XML_ENTITIES) : Object.create(sax.ENTITIES)\n    parser.attribList = []\n\n    // namespaces form a prototype chain.\n    // it always points at the current tag,\n    // which protos to its parent tag.\n    if (parser.opt.xmlns) {\n      parser.ns = Object.create(rootNS)\n    }\n\n    // mostly just for error reporting\n    parser.trackPosition = parser.opt.position !== false\n    if (parser.trackPosition) {\n      parser.position = parser.line = parser.column = 0\n    }\n    emit(parser, 'onready')\n  }\n\n  if (!Object.create) {\n    Object.create = function (o) {\n      function F () {}\n      F.prototype = o\n      var newf = new F()\n      return newf\n    }\n  }\n\n  if (!Object.keys) {\n    Object.keys = function (o) {\n      var a = []\n      for (var i in o) if (o.hasOwnProperty(i)) a.push(i)\n      return a\n    }\n  }\n\n  function checkBufferLength (parser) {\n    var maxAllowed = Math.max(sax.MAX_BUFFER_LENGTH, 10)\n    var maxActual = 0\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      var len = parser[buffers[i]].length\n      if (len > maxAllowed) {\n        // Text/cdata nodes can get big, and since they're buffered,\n        // we can get here under normal conditions.\n        // Avoid issues by emitting the text node now,\n        // so at least it won't get any bigger.\n        switch (buffers[i]) {\n          case 'textNode':\n            closeText(parser)\n            break\n\n          case 'cdata':\n            emitNode(parser, 'oncdata', parser.cdata)\n            parser.cdata = ''\n            break\n\n          case 'script':\n            emitNode(parser, 'onscript', parser.script)\n            parser.script = ''\n            break\n\n          default:\n            error(parser, 'Max buffer length exceeded: ' + buffers[i])\n        }\n      }\n      maxActual = Math.max(maxActual, len)\n    }\n    // schedule the next check for the earliest possible buffer overrun.\n    var m = sax.MAX_BUFFER_LENGTH - maxActual\n    parser.bufferCheckPosition = m + parser.position\n  }\n\n  function clearBuffers (parser) {\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      parser[buffers[i]] = ''\n    }\n  }\n\n  function flushBuffers (parser) {\n    closeText(parser)\n    if (parser.cdata !== '') {\n      emitNode(parser, 'oncdata', parser.cdata)\n      parser.cdata = ''\n    }\n    if (parser.script !== '') {\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n  }\n\n  SAXParser.prototype = {\n    end: function () { end(this) },\n    write: write,\n    resume: function () { this.error = null; return this },\n    close: function () { return this.write(null) },\n    flush: function () { flushBuffers(this) }\n  }\n\n  var Stream\n  try {\n    Stream = require('stream').Stream\n  } catch (ex) {\n    Stream = function () {}\n  }\n\n  var streamWraps = sax.EVENTS.filter(function (ev) {\n    return ev !== 'error' && ev !== 'end'\n  })\n\n  function createStream (strict, opt) {\n    return new SAXStream(strict, opt)\n  }\n\n  function SAXStream (strict, opt) {\n    if (!(this instanceof SAXStream)) {\n      return new SAXStream(strict, opt)\n    }\n\n    Stream.apply(this)\n\n    this._parser = new SAXParser(strict, opt)\n    this.writable = true\n    this.readable = true\n\n    var me = this\n\n    this._parser.onend = function () {\n      me.emit('end')\n    }\n\n    this._parser.onerror = function (er) {\n      me.emit('error', er)\n\n      // if didn't throw, then means error was handled.\n      // go ahead and clear error, so we can write again.\n      me._parser.error = null\n    }\n\n    this._decoder = null\n\n    streamWraps.forEach(function (ev) {\n      Object.defineProperty(me, 'on' + ev, {\n        get: function () {\n          return me._parser['on' + ev]\n        },\n        set: function (h) {\n          if (!h) {\n            me.removeAllListeners(ev)\n            me._parser['on' + ev] = h\n            return h\n          }\n          me.on(ev, h)\n        },\n        enumerable: true,\n        configurable: false\n      })\n    })\n  }\n\n  SAXStream.prototype = Object.create(Stream.prototype, {\n    constructor: {\n      value: SAXStream\n    }\n  })\n\n  SAXStream.prototype.write = function (data) {\n    if (typeof Buffer === 'function' &&\n      typeof Buffer.isBuffer === 'function' &&\n      Buffer.isBuffer(data)) {\n      if (!this._decoder) {\n        var SD = require('string_decoder').StringDecoder\n        this._decoder = new SD('utf8')\n      }\n      data = this._decoder.write(data)\n    }\n\n    this._parser.write(data.toString())\n    this.emit('data', data)\n    return true\n  }\n\n  SAXStream.prototype.end = function (chunk) {\n    if (chunk && chunk.length) {\n      this.write(chunk)\n    }\n    this._parser.end()\n    return true\n  }\n\n  SAXStream.prototype.on = function (ev, handler) {\n    var me = this\n    if (!me._parser['on' + ev] && streamWraps.indexOf(ev) !== -1) {\n      me._parser['on' + ev] = function () {\n        var args = arguments.length === 1 ? [arguments[0]] : Array.apply(null, arguments)\n        args.splice(0, 0, ev)\n        me.emit.apply(me, args)\n      }\n    }\n\n    return Stream.prototype.on.call(me, ev, handler)\n  }\n\n  // this really needs to be replaced with character classes.\n  // XML allows all manner of ridiculous numbers and digits.\n  var CDATA = '[CDATA['\n  var DOCTYPE = 'DOCTYPE'\n  var XML_NAMESPACE = 'http://www.w3.org/XML/1998/namespace'\n  var XMLNS_NAMESPACE = 'http://www.w3.org/2000/xmlns/'\n  var rootNS = { xml: XML_NAMESPACE, xmlns: XMLNS_NAMESPACE }\n\n  // http://www.w3.org/TR/REC-xml/#NT-NameStartChar\n  // This implementation works on strings, a single character at a time\n  // as such, it cannot ever support astral-plane characters (10000-EFFFF)\n  // without a significant breaking change to either this  parser, or the\n  // JavaScript language.  Implementation of an emoji-capable xml parser\n  // is left as an exercise for the reader.\n  var nameStart = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n\n  var nameBody = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/\n\n  var entityStart = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n  var entityBody = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/\n\n  function isWhitespace (c) {\n    return c === ' ' || c === '\\n' || c === '\\r' || c === '\\t'\n  }\n\n  function isQuote (c) {\n    return c === '\"' || c === '\\''\n  }\n\n  function isAttribEnd (c) {\n    return c === '>' || isWhitespace(c)\n  }\n\n  function isMatch (regex, c) {\n    return regex.test(c)\n  }\n\n  function notMatch (regex, c) {\n    return !isMatch(regex, c)\n  }\n\n  var S = 0\n  sax.STATE = {\n    BEGIN: S++, // leading byte order mark or whitespace\n    BEGIN_WHITESPACE: S++, // leading whitespace\n    TEXT: S++, // general stuff\n    TEXT_ENTITY: S++, // &amp and such.\n    OPEN_WAKA: S++, // <\n    SGML_DECL: S++, // <!BLARG\n    SGML_DECL_QUOTED: S++, // <!BLARG foo \"bar\n    DOCTYPE: S++, // <!DOCTYPE\n    DOCTYPE_QUOTED: S++, // <!DOCTYPE \"//blah\n    DOCTYPE_DTD: S++, // <!DOCTYPE \"//blah\" [ ...\n    DOCTYPE_DTD_QUOTED: S++, // <!DOCTYPE \"//blah\" [ \"foo\n    COMMENT_STARTING: S++, // <!-\n    COMMENT: S++, // <!--\n    COMMENT_ENDING: S++, // <!-- blah -\n    COMMENT_ENDED: S++, // <!-- blah --\n    CDATA: S++, // <![CDATA[ something\n    CDATA_ENDING: S++, // ]\n    CDATA_ENDING_2: S++, // ]]\n    PROC_INST: S++, // <?hi\n    PROC_INST_BODY: S++, // <?hi there\n    PROC_INST_ENDING: S++, // <?hi \"there\" ?\n    OPEN_TAG: S++, // <strong\n    OPEN_TAG_SLASH: S++, // <strong /\n    ATTRIB: S++, // <a\n    ATTRIB_NAME: S++, // <a foo\n    ATTRIB_NAME_SAW_WHITE: S++, // <a foo _\n    ATTRIB_VALUE: S++, // <a foo=\n    ATTRIB_VALUE_QUOTED: S++, // <a foo=\"bar\n    ATTRIB_VALUE_CLOSED: S++, // <a foo=\"bar\"\n    ATTRIB_VALUE_UNQUOTED: S++, // <a foo=bar\n    ATTRIB_VALUE_ENTITY_Q: S++, // <foo bar=\"&quot;\"\n    ATTRIB_VALUE_ENTITY_U: S++, // <foo bar=&quot\n    CLOSE_TAG: S++, // </a\n    CLOSE_TAG_SAW_WHITE: S++, // </a   >\n    SCRIPT: S++, // <script> ...\n    SCRIPT_ENDING: S++ // <script> ... <\n  }\n\n  sax.XML_ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\"\n  }\n\n  sax.ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\",\n    'AElig': 198,\n    'Aacute': 193,\n    'Acirc': 194,\n    'Agrave': 192,\n    'Aring': 197,\n    'Atilde': 195,\n    'Auml': 196,\n    'Ccedil': 199,\n    'ETH': 208,\n    'Eacute': 201,\n    'Ecirc': 202,\n    'Egrave': 200,\n    'Euml': 203,\n    'Iacute': 205,\n    'Icirc': 206,\n    'Igrave': 204,\n    'Iuml': 207,\n    'Ntilde': 209,\n    'Oacute': 211,\n    'Ocirc': 212,\n    'Ograve': 210,\n    'Oslash': 216,\n    'Otilde': 213,\n    'Ouml': 214,\n    'THORN': 222,\n    'Uacute': 218,\n    'Ucirc': 219,\n    'Ugrave': 217,\n    'Uuml': 220,\n    'Yacute': 221,\n    'aacute': 225,\n    'acirc': 226,\n    'aelig': 230,\n    'agrave': 224,\n    'aring': 229,\n    'atilde': 227,\n    'auml': 228,\n    'ccedil': 231,\n    'eacute': 233,\n    'ecirc': 234,\n    'egrave': 232,\n    'eth': 240,\n    'euml': 235,\n    'iacute': 237,\n    'icirc': 238,\n    'igrave': 236,\n    'iuml': 239,\n    'ntilde': 241,\n    'oacute': 243,\n    'ocirc': 244,\n    'ograve': 242,\n    'oslash': 248,\n    'otilde': 245,\n    'ouml': 246,\n    'szlig': 223,\n    'thorn': 254,\n    'uacute': 250,\n    'ucirc': 251,\n    'ugrave': 249,\n    'uuml': 252,\n    'yacute': 253,\n    'yuml': 255,\n    'copy': 169,\n    'reg': 174,\n    'nbsp': 160,\n    'iexcl': 161,\n    'cent': 162,\n    'pound': 163,\n    'curren': 164,\n    'yen': 165,\n    'brvbar': 166,\n    'sect': 167,\n    'uml': 168,\n    'ordf': 170,\n    'laquo': 171,\n    'not': 172,\n    'shy': 173,\n    'macr': 175,\n    'deg': 176,\n    'plusmn': 177,\n    'sup1': 185,\n    'sup2': 178,\n    'sup3': 179,\n    'acute': 180,\n    'micro': 181,\n    'para': 182,\n    'middot': 183,\n    'cedil': 184,\n    'ordm': 186,\n    'raquo': 187,\n    'frac14': 188,\n    'frac12': 189,\n    'frac34': 190,\n    'iquest': 191,\n    'times': 215,\n    'divide': 247,\n    'OElig': 338,\n    'oelig': 339,\n    'Scaron': 352,\n    'scaron': 353,\n    'Yuml': 376,\n    'fnof': 402,\n    'circ': 710,\n    'tilde': 732,\n    'Alpha': 913,\n    'Beta': 914,\n    'Gamma': 915,\n    'Delta': 916,\n    'Epsilon': 917,\n    'Zeta': 918,\n    'Eta': 919,\n    'Theta': 920,\n    'Iota': 921,\n    'Kappa': 922,\n    'Lambda': 923,\n    'Mu': 924,\n    'Nu': 925,\n    'Xi': 926,\n    'Omicron': 927,\n    'Pi': 928,\n    'Rho': 929,\n    'Sigma': 931,\n    'Tau': 932,\n    'Upsilon': 933,\n    'Phi': 934,\n    'Chi': 935,\n    'Psi': 936,\n    'Omega': 937,\n    'alpha': 945,\n    'beta': 946,\n    'gamma': 947,\n    'delta': 948,\n    'epsilon': 949,\n    'zeta': 950,\n    'eta': 951,\n    'theta': 952,\n    'iota': 953,\n    'kappa': 954,\n    'lambda': 955,\n    'mu': 956,\n    'nu': 957,\n    'xi': 958,\n    'omicron': 959,\n    'pi': 960,\n    'rho': 961,\n    'sigmaf': 962,\n    'sigma': 963,\n    'tau': 964,\n    'upsilon': 965,\n    'phi': 966,\n    'chi': 967,\n    'psi': 968,\n    'omega': 969,\n    'thetasym': 977,\n    'upsih': 978,\n    'piv': 982,\n    'ensp': 8194,\n    'emsp': 8195,\n    'thinsp': 8201,\n    'zwnj': 8204,\n    'zwj': 8205,\n    'lrm': 8206,\n    'rlm': 8207,\n    'ndash': 8211,\n    'mdash': 8212,\n    'lsquo': 8216,\n    'rsquo': 8217,\n    'sbquo': 8218,\n    'ldquo': 8220,\n    'rdquo': 8221,\n    'bdquo': 8222,\n    'dagger': 8224,\n    'Dagger': 8225,\n    'bull': 8226,\n    'hellip': 8230,\n    'permil': 8240,\n    'prime': 8242,\n    'Prime': 8243,\n    'lsaquo': 8249,\n    'rsaquo': 8250,\n    'oline': 8254,\n    'frasl': 8260,\n    'euro': 8364,\n    'image': 8465,\n    'weierp': 8472,\n    'real': 8476,\n    'trade': 8482,\n    'alefsym': 8501,\n    'larr': 8592,\n    'uarr': 8593,\n    'rarr': 8594,\n    'darr': 8595,\n    'harr': 8596,\n    'crarr': 8629,\n    'lArr': 8656,\n    'uArr': 8657,\n    'rArr': 8658,\n    'dArr': 8659,\n    'hArr': 8660,\n    'forall': 8704,\n    'part': 8706,\n    'exist': 8707,\n    'empty': 8709,\n    'nabla': 8711,\n    'isin': 8712,\n    'notin': 8713,\n    'ni': 8715,\n    'prod': 8719,\n    'sum': 8721,\n    'minus': 8722,\n    'lowast': 8727,\n    'radic': 8730,\n    'prop': 8733,\n    'infin': 8734,\n    'ang': 8736,\n    'and': 8743,\n    'or': 8744,\n    'cap': 8745,\n    'cup': 8746,\n    'int': 8747,\n    'there4': 8756,\n    'sim': 8764,\n    'cong': 8773,\n    'asymp': 8776,\n    'ne': 8800,\n    'equiv': 8801,\n    'le': 8804,\n    'ge': 8805,\n    'sub': 8834,\n    'sup': 8835,\n    'nsub': 8836,\n    'sube': 8838,\n    'supe': 8839,\n    'oplus': 8853,\n    'otimes': 8855,\n    'perp': 8869,\n    'sdot': 8901,\n    'lceil': 8968,\n    'rceil': 8969,\n    'lfloor': 8970,\n    'rfloor': 8971,\n    'lang': 9001,\n    'rang': 9002,\n    'loz': 9674,\n    'spades': 9824,\n    'clubs': 9827,\n    'hearts': 9829,\n    'diams': 9830\n  }\n\n  Object.keys(sax.ENTITIES).forEach(function (key) {\n    var e = sax.ENTITIES[key]\n    var s = typeof e === 'number' ? String.fromCharCode(e) : e\n    sax.ENTITIES[key] = s\n  })\n\n  for (var s in sax.STATE) {\n    sax.STATE[sax.STATE[s]] = s\n  }\n\n  // shorthand\n  S = sax.STATE\n\n  function emit (parser, event, data) {\n    parser[event] && parser[event](data)\n  }\n\n  function emitNode (parser, nodeType, data) {\n    if (parser.textNode) closeText(parser)\n    emit(parser, nodeType, data)\n  }\n\n  function closeText (parser) {\n    parser.textNode = textopts(parser.opt, parser.textNode)\n    if (parser.textNode) emit(parser, 'ontext', parser.textNode)\n    parser.textNode = ''\n  }\n\n  function textopts (opt, text) {\n    if (opt.trim) text = text.trim()\n    if (opt.normalize) text = text.replace(/\\s+/g, ' ')\n    return text\n  }\n\n  function error (parser, er) {\n    closeText(parser)\n    if (parser.trackPosition) {\n      er += '\\nLine: ' + parser.line +\n        '\\nColumn: ' + parser.column +\n        '\\nChar: ' + parser.c\n    }\n    er = new Error(er)\n    parser.error = er\n    emit(parser, 'onerror', er)\n    return parser\n  }\n\n  function end (parser) {\n    if (parser.sawRoot && !parser.closedRoot) strictFail(parser, 'Unclosed root tag')\n    if ((parser.state !== S.BEGIN) &&\n      (parser.state !== S.BEGIN_WHITESPACE) &&\n      (parser.state !== S.TEXT)) {\n      error(parser, 'Unexpected end')\n    }\n    closeText(parser)\n    parser.c = ''\n    parser.closed = true\n    emit(parser, 'onend')\n    SAXParser.call(parser, parser.strict, parser.opt)\n    return parser\n  }\n\n  function strictFail (parser, message) {\n    if (typeof parser !== 'object' || !(parser instanceof SAXParser)) {\n      throw new Error('bad call to strictFail')\n    }\n    if (parser.strict) {\n      error(parser, message)\n    }\n  }\n\n  function newTag (parser) {\n    if (!parser.strict) parser.tagName = parser.tagName[parser.looseCase]()\n    var parent = parser.tags[parser.tags.length - 1] || parser\n    var tag = parser.tag = { name: parser.tagName, attributes: {} }\n\n    // will be overridden if tag contails an xmlns=\"foo\" or xmlns:foo=\"bar\"\n    if (parser.opt.xmlns) {\n      tag.ns = parent.ns\n    }\n    parser.attribList.length = 0\n    emitNode(parser, 'onopentagstart', tag)\n  }\n\n  function qname (name, attribute) {\n    var i = name.indexOf(':')\n    var qualName = i < 0 ? [ '', name ] : name.split(':')\n    var prefix = qualName[0]\n    var local = qualName[1]\n\n    // <x \"xmlns\"=\"http://foo\">\n    if (attribute && name === 'xmlns') {\n      prefix = 'xmlns'\n      local = ''\n    }\n\n    return { prefix: prefix, local: local }\n  }\n\n  function attrib (parser) {\n    if (!parser.strict) {\n      parser.attribName = parser.attribName[parser.looseCase]()\n    }\n\n    if (parser.attribList.indexOf(parser.attribName) !== -1 ||\n      parser.tag.attributes.hasOwnProperty(parser.attribName)) {\n      parser.attribName = parser.attribValue = ''\n      return\n    }\n\n    if (parser.opt.xmlns) {\n      var qn = qname(parser.attribName, true)\n      var prefix = qn.prefix\n      var local = qn.local\n\n      if (prefix === 'xmlns') {\n        // namespace binding attribute. push the binding into scope\n        if (local === 'xml' && parser.attribValue !== XML_NAMESPACE) {\n          strictFail(parser,\n            'xml: prefix must be bound to ' + XML_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else if (local === 'xmlns' && parser.attribValue !== XMLNS_NAMESPACE) {\n          strictFail(parser,\n            'xmlns: prefix must be bound to ' + XMLNS_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else {\n          var tag = parser.tag\n          var parent = parser.tags[parser.tags.length - 1] || parser\n          if (tag.ns === parent.ns) {\n            tag.ns = Object.create(parent.ns)\n          }\n          tag.ns[local] = parser.attribValue\n        }\n      }\n\n      // defer onattribute events until all attributes have been seen\n      // so any new bindings can take effect. preserve attribute order\n      // so deferred events can be emitted in document order\n      parser.attribList.push([parser.attribName, parser.attribValue])\n    } else {\n      // in non-xmlns mode, we can emit the event right away\n      parser.tag.attributes[parser.attribName] = parser.attribValue\n      emitNode(parser, 'onattribute', {\n        name: parser.attribName,\n        value: parser.attribValue\n      })\n    }\n\n    parser.attribName = parser.attribValue = ''\n  }\n\n  function openTag (parser, selfClosing) {\n    if (parser.opt.xmlns) {\n      // emit namespace binding events\n      var tag = parser.tag\n\n      // add namespace info to tag\n      var qn = qname(parser.tagName)\n      tag.prefix = qn.prefix\n      tag.local = qn.local\n      tag.uri = tag.ns[qn.prefix] || ''\n\n      if (tag.prefix && !tag.uri) {\n        strictFail(parser, 'Unbound namespace prefix: ' +\n          JSON.stringify(parser.tagName))\n        tag.uri = qn.prefix\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (tag.ns && parent.ns !== tag.ns) {\n        Object.keys(tag.ns).forEach(function (p) {\n          emitNode(parser, 'onopennamespace', {\n            prefix: p,\n            uri: tag.ns[p]\n          })\n        })\n      }\n\n      // handle deferred onattribute events\n      // Note: do not apply default ns to attributes:\n      //   http://www.w3.org/TR/REC-xml-names/#defaulting\n      for (var i = 0, l = parser.attribList.length; i < l; i++) {\n        var nv = parser.attribList[i]\n        var name = nv[0]\n        var value = nv[1]\n        var qualName = qname(name, true)\n        var prefix = qualName.prefix\n        var local = qualName.local\n        var uri = prefix === '' ? '' : (tag.ns[prefix] || '')\n        var a = {\n          name: name,\n          value: value,\n          prefix: prefix,\n          local: local,\n          uri: uri\n        }\n\n        // if there's any attributes with an undefined namespace,\n        // then fail on them now.\n        if (prefix && prefix !== 'xmlns' && !uri) {\n          strictFail(parser, 'Unbound namespace prefix: ' +\n            JSON.stringify(prefix))\n          a.uri = prefix\n        }\n        parser.tag.attributes[name] = a\n        emitNode(parser, 'onattribute', a)\n      }\n      parser.attribList.length = 0\n    }\n\n    parser.tag.isSelfClosing = !!selfClosing\n\n    // process the tag\n    parser.sawRoot = true\n    parser.tags.push(parser.tag)\n    emitNode(parser, 'onopentag', parser.tag)\n    if (!selfClosing) {\n      // special case for <script> in non-strict mode.\n      if (!parser.noscript && parser.tagName.toLowerCase() === 'script') {\n        parser.state = S.SCRIPT\n      } else {\n        parser.state = S.TEXT\n      }\n      parser.tag = null\n      parser.tagName = ''\n    }\n    parser.attribName = parser.attribValue = ''\n    parser.attribList.length = 0\n  }\n\n  function closeTag (parser) {\n    if (!parser.tagName) {\n      strictFail(parser, 'Weird empty close tag.')\n      parser.textNode += '</>'\n      parser.state = S.TEXT\n      return\n    }\n\n    if (parser.script) {\n      if (parser.tagName !== 'script') {\n        parser.script += '</' + parser.tagName + '>'\n        parser.tagName = ''\n        parser.state = S.SCRIPT\n        return\n      }\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n\n    // first make sure that the closing tag actually exists.\n    // <a><b></c></b></a> will close everything, otherwise.\n    var t = parser.tags.length\n    var tagName = parser.tagName\n    if (!parser.strict) {\n      tagName = tagName[parser.looseCase]()\n    }\n    var closeTo = tagName\n    while (t--) {\n      var close = parser.tags[t]\n      if (close.name !== closeTo) {\n        // fail the first time in strict mode\n        strictFail(parser, 'Unexpected close tag')\n      } else {\n        break\n      }\n    }\n\n    // didn't find it.  we already failed for strict, so just abort.\n    if (t < 0) {\n      strictFail(parser, 'Unmatched closing tag: ' + parser.tagName)\n      parser.textNode += '</' + parser.tagName + '>'\n      parser.state = S.TEXT\n      return\n    }\n    parser.tagName = tagName\n    var s = parser.tags.length\n    while (s-- > t) {\n      var tag = parser.tag = parser.tags.pop()\n      parser.tagName = parser.tag.name\n      emitNode(parser, 'onclosetag', parser.tagName)\n\n      var x = {}\n      for (var i in tag.ns) {\n        x[i] = tag.ns[i]\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (parser.opt.xmlns && tag.ns !== parent.ns) {\n        // remove namespace bindings introduced by tag\n        Object.keys(tag.ns).forEach(function (p) {\n          var n = tag.ns[p]\n          emitNode(parser, 'onclosenamespace', { prefix: p, uri: n })\n        })\n      }\n    }\n    if (t === 0) parser.closedRoot = true\n    parser.tagName = parser.attribValue = parser.attribName = ''\n    parser.attribList.length = 0\n    parser.state = S.TEXT\n  }\n\n  function parseEntity (parser) {\n    var entity = parser.entity\n    var entityLC = entity.toLowerCase()\n    var num\n    var numStr = ''\n\n    if (parser.ENTITIES[entity]) {\n      return parser.ENTITIES[entity]\n    }\n    if (parser.ENTITIES[entityLC]) {\n      return parser.ENTITIES[entityLC]\n    }\n    entity = entityLC\n    if (entity.charAt(0) === '#') {\n      if (entity.charAt(1) === 'x') {\n        entity = entity.slice(2)\n        num = parseInt(entity, 16)\n        numStr = num.toString(16)\n      } else {\n        entity = entity.slice(1)\n        num = parseInt(entity, 10)\n        numStr = num.toString(10)\n      }\n    }\n    entity = entity.replace(/^0+/, '')\n    if (isNaN(num) || numStr.toLowerCase() !== entity) {\n      strictFail(parser, 'Invalid character entity')\n      return '&' + parser.entity + ';'\n    }\n\n    return String.fromCodePoint(num)\n  }\n\n  function beginWhiteSpace (parser, c) {\n    if (c === '<') {\n      parser.state = S.OPEN_WAKA\n      parser.startTagPosition = parser.position\n    } else if (!isWhitespace(c)) {\n      // have to process this as a text node.\n      // weird, but happens.\n      strictFail(parser, 'Non-whitespace before first tag.')\n      parser.textNode = c\n      parser.state = S.TEXT\n    }\n  }\n\n  function charAt (chunk, i) {\n    var result = ''\n    if (i < chunk.length) {\n      result = chunk.charAt(i)\n    }\n    return result\n  }\n\n  function write (chunk) {\n    var parser = this\n    if (this.error) {\n      throw this.error\n    }\n    if (parser.closed) {\n      return error(parser,\n        'Cannot write after close. Assign an onready handler.')\n    }\n    if (chunk === null) {\n      return end(parser)\n    }\n    if (typeof chunk === 'object') {\n      chunk = chunk.toString()\n    }\n    var i = 0\n    var c = ''\n    while (true) {\n      c = charAt(chunk, i++)\n      parser.c = c\n\n      if (!c) {\n        break\n      }\n\n      if (parser.trackPosition) {\n        parser.position++\n        if (c === '\\n') {\n          parser.line++\n          parser.column = 0\n        } else {\n          parser.column++\n        }\n      }\n\n      switch (parser.state) {\n        case S.BEGIN:\n          parser.state = S.BEGIN_WHITESPACE\n          if (c === '\\uFEFF') {\n            continue\n          }\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.BEGIN_WHITESPACE:\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.TEXT:\n          if (parser.sawRoot && !parser.closedRoot) {\n            var starti = i - 1\n            while (c && c !== '<' && c !== '&') {\n              c = charAt(chunk, i++)\n              if (c && parser.trackPosition) {\n                parser.position++\n                if (c === '\\n') {\n                  parser.line++\n                  parser.column = 0\n                } else {\n                  parser.column++\n                }\n              }\n            }\n            parser.textNode += chunk.substring(starti, i - 1)\n          }\n          if (c === '<' && !(parser.sawRoot && parser.closedRoot && !parser.strict)) {\n            parser.state = S.OPEN_WAKA\n            parser.startTagPosition = parser.position\n          } else {\n            if (!isWhitespace(c) && (!parser.sawRoot || parser.closedRoot)) {\n              strictFail(parser, 'Text data outside of root node.')\n            }\n            if (c === '&') {\n              parser.state = S.TEXT_ENTITY\n            } else {\n              parser.textNode += c\n            }\n          }\n          continue\n\n        case S.SCRIPT:\n          // only non-strict\n          if (c === '<') {\n            parser.state = S.SCRIPT_ENDING\n          } else {\n            parser.script += c\n          }\n          continue\n\n        case S.SCRIPT_ENDING:\n          if (c === '/') {\n            parser.state = S.CLOSE_TAG\n          } else {\n            parser.script += '<' + c\n            parser.state = S.SCRIPT\n          }\n          continue\n\n        case S.OPEN_WAKA:\n          // either a /, ?, !, or text is coming next.\n          if (c === '!') {\n            parser.state = S.SGML_DECL\n            parser.sgmlDecl = ''\n          } else if (isWhitespace(c)) {\n            // wait for it...\n          } else if (isMatch(nameStart, c)) {\n            parser.state = S.OPEN_TAG\n            parser.tagName = c\n          } else if (c === '/') {\n            parser.state = S.CLOSE_TAG\n            parser.tagName = ''\n          } else if (c === '?') {\n            parser.state = S.PROC_INST\n            parser.procInstName = parser.procInstBody = ''\n          } else {\n            strictFail(parser, 'Unencoded <')\n            // if there was some whitespace, then add that in.\n            if (parser.startTagPosition + 1 < parser.position) {\n              var pad = parser.position - parser.startTagPosition\n              c = new Array(pad).join(' ') + c\n            }\n            parser.textNode += '<' + c\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.SGML_DECL:\n          if ((parser.sgmlDecl + c).toUpperCase() === CDATA) {\n            emitNode(parser, 'onopencdata')\n            parser.state = S.CDATA\n            parser.sgmlDecl = ''\n            parser.cdata = ''\n          } else if (parser.sgmlDecl + c === '--') {\n            parser.state = S.COMMENT\n            parser.comment = ''\n            parser.sgmlDecl = ''\n          } else if ((parser.sgmlDecl + c).toUpperCase() === DOCTYPE) {\n            parser.state = S.DOCTYPE\n            if (parser.doctype || parser.sawRoot) {\n              strictFail(parser,\n                'Inappropriately located doctype declaration')\n            }\n            parser.doctype = ''\n            parser.sgmlDecl = ''\n          } else if (c === '>') {\n            emitNode(parser, 'onsgmldeclaration', parser.sgmlDecl)\n            parser.sgmlDecl = ''\n            parser.state = S.TEXT\n          } else if (isQuote(c)) {\n            parser.state = S.SGML_DECL_QUOTED\n            parser.sgmlDecl += c\n          } else {\n            parser.sgmlDecl += c\n          }\n          continue\n\n        case S.SGML_DECL_QUOTED:\n          if (c === parser.q) {\n            parser.state = S.SGML_DECL\n            parser.q = ''\n          }\n          parser.sgmlDecl += c\n          continue\n\n        case S.DOCTYPE:\n          if (c === '>') {\n            parser.state = S.TEXT\n            emitNode(parser, 'ondoctype', parser.doctype)\n            parser.doctype = true // just remember that we saw it.\n          } else {\n            parser.doctype += c\n            if (c === '[') {\n              parser.state = S.DOCTYPE_DTD\n            } else if (isQuote(c)) {\n              parser.state = S.DOCTYPE_QUOTED\n              parser.q = c\n            }\n          }\n          continue\n\n        case S.DOCTYPE_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.q = ''\n            parser.state = S.DOCTYPE\n          }\n          continue\n\n        case S.DOCTYPE_DTD:\n          parser.doctype += c\n          if (c === ']') {\n            parser.state = S.DOCTYPE\n          } else if (isQuote(c)) {\n            parser.state = S.DOCTYPE_DTD_QUOTED\n            parser.q = c\n          }\n          continue\n\n        case S.DOCTYPE_DTD_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.state = S.DOCTYPE_DTD\n            parser.q = ''\n          }\n          continue\n\n        case S.COMMENT:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDING\n          } else {\n            parser.comment += c\n          }\n          continue\n\n        case S.COMMENT_ENDING:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDED\n            parser.comment = textopts(parser.opt, parser.comment)\n            if (parser.comment) {\n              emitNode(parser, 'oncomment', parser.comment)\n            }\n            parser.comment = ''\n          } else {\n            parser.comment += '-' + c\n            parser.state = S.COMMENT\n          }\n          continue\n\n        case S.COMMENT_ENDED:\n          if (c !== '>') {\n            strictFail(parser, 'Malformed comment')\n            // allow <!-- blah -- bloo --> in non-strict mode,\n            // which is a comment of \" blah -- bloo \"\n            parser.comment += '--' + c\n            parser.state = S.COMMENT\n          } else {\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.CDATA:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING\n          } else {\n            parser.cdata += c\n          }\n          continue\n\n        case S.CDATA_ENDING:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING_2\n          } else {\n            parser.cdata += ']' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.CDATA_ENDING_2:\n          if (c === '>') {\n            if (parser.cdata) {\n              emitNode(parser, 'oncdata', parser.cdata)\n            }\n            emitNode(parser, 'onclosecdata')\n            parser.cdata = ''\n            parser.state = S.TEXT\n          } else if (c === ']') {\n            parser.cdata += ']'\n          } else {\n            parser.cdata += ']]' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.PROC_INST:\n          if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else if (isWhitespace(c)) {\n            parser.state = S.PROC_INST_BODY\n          } else {\n            parser.procInstName += c\n          }\n          continue\n\n        case S.PROC_INST_BODY:\n          if (!parser.procInstBody && isWhitespace(c)) {\n            continue\n          } else if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else {\n            parser.procInstBody += c\n          }\n          continue\n\n        case S.PROC_INST_ENDING:\n          if (c === '>') {\n            emitNode(parser, 'onprocessinginstruction', {\n              name: parser.procInstName,\n              body: parser.procInstBody\n            })\n            parser.procInstName = parser.procInstBody = ''\n            parser.state = S.TEXT\n          } else {\n            parser.procInstBody += '?' + c\n            parser.state = S.PROC_INST_BODY\n          }\n          continue\n\n        case S.OPEN_TAG:\n          if (isMatch(nameBody, c)) {\n            parser.tagName += c\n          } else {\n            newTag(parser)\n            if (c === '>') {\n              openTag(parser)\n            } else if (c === '/') {\n              parser.state = S.OPEN_TAG_SLASH\n            } else {\n              if (!isWhitespace(c)) {\n                strictFail(parser, 'Invalid character in tag name')\n              }\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.OPEN_TAG_SLASH:\n          if (c === '>') {\n            openTag(parser, true)\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Forward-slash in opening tag not followed by >')\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.ATTRIB:\n          // haven't read the attribute name yet.\n          if (isWhitespace(c)) {\n            continue\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (isMatch(nameStart, c)) {\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (c === '>') {\n            strictFail(parser, 'Attribute without value')\n            parser.attribValue = parser.attribName\n            attrib(parser)\n            openTag(parser)\n          } else if (isWhitespace(c)) {\n            parser.state = S.ATTRIB_NAME_SAW_WHITE\n          } else if (isMatch(nameBody, c)) {\n            parser.attribName += c\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME_SAW_WHITE:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (isWhitespace(c)) {\n            continue\n          } else {\n            strictFail(parser, 'Attribute without value')\n            parser.tag.attributes[parser.attribName] = ''\n            parser.attribValue = ''\n            emitNode(parser, 'onattribute', {\n              name: parser.attribName,\n              value: ''\n            })\n            parser.attribName = ''\n            if (c === '>') {\n              openTag(parser)\n            } else if (isMatch(nameStart, c)) {\n              parser.attribName = c\n              parser.state = S.ATTRIB_NAME\n            } else {\n              strictFail(parser, 'Invalid attribute name')\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.ATTRIB_VALUE:\n          if (isWhitespace(c)) {\n            continue\n          } else if (isQuote(c)) {\n            parser.q = c\n            parser.state = S.ATTRIB_VALUE_QUOTED\n          } else {\n            strictFail(parser, 'Unquoted attribute value')\n            parser.state = S.ATTRIB_VALUE_UNQUOTED\n            parser.attribValue = c\n          }\n          continue\n\n        case S.ATTRIB_VALUE_QUOTED:\n          if (c !== parser.q) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_Q\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          parser.q = ''\n          parser.state = S.ATTRIB_VALUE_CLOSED\n          continue\n\n        case S.ATTRIB_VALUE_CLOSED:\n          if (isWhitespace(c)) {\n            parser.state = S.ATTRIB\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (isMatch(nameStart, c)) {\n            strictFail(parser, 'No whitespace between attributes')\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_VALUE_UNQUOTED:\n          if (!isAttribEnd(c)) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_U\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          if (c === '>') {\n            openTag(parser)\n          } else {\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.CLOSE_TAG:\n          if (!parser.tagName) {\n            if (isWhitespace(c)) {\n              continue\n            } else if (notMatch(nameStart, c)) {\n              if (parser.script) {\n                parser.script += '</' + c\n                parser.state = S.SCRIPT\n              } else {\n                strictFail(parser, 'Invalid tagname in closing tag.')\n              }\n            } else {\n              parser.tagName = c\n            }\n          } else if (c === '>') {\n            closeTag(parser)\n          } else if (isMatch(nameBody, c)) {\n            parser.tagName += c\n          } else if (parser.script) {\n            parser.script += '</' + parser.tagName\n            parser.tagName = ''\n            parser.state = S.SCRIPT\n          } else {\n            if (!isWhitespace(c)) {\n              strictFail(parser, 'Invalid tagname in closing tag')\n            }\n            parser.state = S.CLOSE_TAG_SAW_WHITE\n          }\n          continue\n\n        case S.CLOSE_TAG_SAW_WHITE:\n          if (isWhitespace(c)) {\n            continue\n          }\n          if (c === '>') {\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Invalid characters in closing tag')\n          }\n          continue\n\n        case S.TEXT_ENTITY:\n        case S.ATTRIB_VALUE_ENTITY_Q:\n        case S.ATTRIB_VALUE_ENTITY_U:\n          var returnState\n          var buffer\n          switch (parser.state) {\n            case S.TEXT_ENTITY:\n              returnState = S.TEXT\n              buffer = 'textNode'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_Q:\n              returnState = S.ATTRIB_VALUE_QUOTED\n              buffer = 'attribValue'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_U:\n              returnState = S.ATTRIB_VALUE_UNQUOTED\n              buffer = 'attribValue'\n              break\n          }\n\n          if (c === ';') {\n            parser[buffer] += parseEntity(parser)\n            parser.entity = ''\n            parser.state = returnState\n          } else if (isMatch(parser.entity.length ? entityBody : entityStart, c)) {\n            parser.entity += c\n          } else {\n            strictFail(parser, 'Invalid character in entity name')\n            parser[buffer] += '&' + parser.entity + c\n            parser.entity = ''\n            parser.state = returnState\n          }\n\n          continue\n\n        default:\n          throw new Error(parser, 'Unknown state: ' + parser.state)\n      }\n    } // while\n\n    if (parser.position >= parser.bufferCheckPosition) {\n      checkBufferLength(parser)\n    }\n    return parser\n  }\n\n  /*! http://mths.be/fromcodepoint v0.1.0 by @mathias */\n  /* istanbul ignore next */\n  if (!String.fromCodePoint) {\n    (function () {\n      var stringFromCharCode = String.fromCharCode\n      var floor = Math.floor\n      var fromCodePoint = function () {\n        var MAX_SIZE = 0x4000\n        var codeUnits = []\n        var highSurrogate\n        var lowSurrogate\n        var index = -1\n        var length = arguments.length\n        if (!length) {\n          return ''\n        }\n        var result = ''\n        while (++index < length) {\n          var codePoint = Number(arguments[index])\n          if (\n            !isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n            codePoint < 0 || // not a valid Unicode code point\n            codePoint > 0x10FFFF || // not a valid Unicode code point\n            floor(codePoint) !== codePoint // not an integer\n          ) {\n            throw RangeError('Invalid code point: ' + codePoint)\n          }\n          if (codePoint <= 0xFFFF) { // BMP code point\n            codeUnits.push(codePoint)\n          } else { // Astral code point; split in surrogate halves\n            // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n            codePoint -= 0x10000\n            highSurrogate = (codePoint >> 10) + 0xD800\n            lowSurrogate = (codePoint % 0x400) + 0xDC00\n            codeUnits.push(highSurrogate, lowSurrogate)\n          }\n          if (index + 1 === length || codeUnits.length > MAX_SIZE) {\n            result += stringFromCharCode.apply(null, codeUnits)\n            codeUnits.length = 0\n          }\n        }\n        return result\n      }\n      /* istanbul ignore next */\n      if (Object.defineProperty) {\n        Object.defineProperty(String, 'fromCodePoint', {\n          value: fromCodePoint,\n          configurable: true,\n          writable: true\n        })\n      } else {\n        String.fromCodePoint = fromCodePoint\n      }\n    }())\n  }\n})(typeof exports === 'undefined' ? this.sax = {} : exports)\n","module.exports = {\n\n  copyOptions: function (options) {\n    var key, copy = {};\n    for (key in options) {\n      if (options.hasOwnProperty(key)) {\n        copy[key] = options[key];\n      }\n    }\n    return copy;\n  },\n\n  ensureFlagExists: function (item, options) {\n    if (!(item in options) || typeof options[item] !== 'boolean') {\n      options[item] = false;\n    }\n  },\n\n  ensureSpacesExists: function (options) {\n    if (!('spaces' in options) || (typeof options.spaces !== 'number' && typeof options.spaces !== 'string')) {\n      options.spaces = 0;\n    }\n  },\n\n  ensureKeyExists: function (key, options) {\n    if (!(key + 'Key' in options) || typeof options[key + 'Key'] !== 'string') {\n      options[key + 'Key'] = options.compact ? '_' + key : key;\n    }\n  },\n\n  checkFnExists: function (key, options) {\n    return key + 'Fn' in options;\n  }\n\n};\n","module.exports = {\r\n\r\n  isArray: function(value) {\r\n    if (Array.isArray) {\r\n      return Array.isArray(value);\r\n    }\r\n    // fallback for older browsers like  IE 8\r\n    return Object.prototype.toString.call( value ) === '[object Array]';\r\n  }\r\n\r\n};\r\n","var helper = require('./options-helper');\r\nvar isArray = require('./array-helper').isArray;\r\n\r\nvar currentElement, currentElementName;\r\n\r\nfunction validateOptions(userOptions) {\r\n  var options = helper.copyOptions(userOptions);\r\n  helper.ensureFlagExists('ignoreDeclaration', options);\r\n  helper.ensureFlagExists('ignoreInstruction', options);\r\n  helper.ensureFlagExists('ignoreAttributes', options);\r\n  helper.ensureFlagExists('ignoreText', options);\r\n  helper.ensureFlagExists('ignoreComment', options);\r\n  helper.ensureFlagExists('ignoreCdata', options);\r\n  helper.ensureFlagExists('ignoreDoctype', options);\r\n  helper.ensureFlagExists('compact', options);\r\n  helper.ensureFlagExists('indentText', options);\r\n  helper.ensureFlagExists('indentCdata', options);\r\n  helper.ensureFlagExists('indentAttributes', options);\r\n  helper.ensureFlagExists('indentInstruction', options);\r\n  helper.ensureFlagExists('fullTagEmptyElement', options);\r\n  helper.ensureFlagExists('noQuotesForNativeAttributes', options);\r\n  helper.ensureSpacesExists(options);\r\n  if (typeof options.spaces === 'number') {\r\n    options.spaces = Array(options.spaces + 1).join(' ');\r\n  }\r\n  helper.ensureKeyExists('declaration', options);\r\n  helper.ensureKeyExists('instruction', options);\r\n  helper.ensureKeyExists('attributes', options);\r\n  helper.ensureKeyExists('text', options);\r\n  helper.ensureKeyExists('comment', options);\r\n  helper.ensureKeyExists('cdata', options);\r\n  helper.ensureKeyExists('doctype', options);\r\n  helper.ensureKeyExists('type', options);\r\n  helper.ensureKeyExists('name', options);\r\n  helper.ensureKeyExists('elements', options);\r\n  helper.checkFnExists('doctype', options);\r\n  helper.checkFnExists('instruction', options);\r\n  helper.checkFnExists('cdata', options);\r\n  helper.checkFnExists('comment', options);\r\n  helper.checkFnExists('text', options);\r\n  helper.checkFnExists('instructionName', options);\r\n  helper.checkFnExists('elementName', options);\r\n  helper.checkFnExists('attributeName', options);\r\n  helper.checkFnExists('attributeValue', options);\r\n  helper.checkFnExists('attributes', options);\r\n  helper.checkFnExists('fullTagEmptyElement', options);\r\n  return options;\r\n}\r\n\r\nfunction writeIndentation(options, depth, firstLine) {\r\n  return (!firstLine && options.spaces ? '\\n' : '') + Array(depth + 1).join(options.spaces);\r\n}\r\n\r\nfunction writeAttributes(attributes, options, depth) {\r\n  if (options.ignoreAttributes) {\r\n    return '';\r\n  }\r\n  if ('attributesFn' in options) {\r\n    attributes = options.attributesFn(attributes, currentElementName, currentElement);\r\n  }\r\n  var key, attr, attrName, quote, result = '';\r\n  for (key in attributes) {\r\n    if (attributes.hasOwnProperty(key)) {\r\n      quote = options.noQuotesForNativeAttributes && typeof attributes[key] !== 'string' ? '' : '\"';\r\n      attr = '' + attributes[key]; // ensure number and boolean are converted to String\r\n      attr = attr.replace(/\"/g, '&quot;');\r\n      attrName = 'attributeNameFn' in options ? options.attributeNameFn(key, attr, currentElementName, currentElement) : key;\r\n      result += (options.spaces && options.indentAttributes? writeIndentation(options, depth+1, false) : ' ');\r\n      result += attrName + '=' + quote + ('attributeValueFn' in options ? options.attributeValueFn(attr, key, currentElementName, currentElement) : attr) + quote;\r\n    }\r\n  }\r\n  if (attributes && Object.keys(attributes).length && options.spaces && options.indentAttributes) {\r\n    result += writeIndentation(options, depth, false);\r\n  }\r\n  return result;\r\n}\r\n\r\nfunction writeDeclaration(declaration, options, depth) {\r\n  currentElement = declaration;\r\n  currentElementName = 'xml';\r\n  return options.ignoreDeclaration ? '' :  '<?' + 'xml' + writeAttributes(declaration[options.attributesKey], options, depth) + '?>';\r\n}\r\n\r\nfunction writeInstruction(instruction, options, depth) {\r\n  if (options.ignoreInstruction) {\r\n    return '';\r\n  }\r\n  var key;\r\n  for (key in instruction) {\r\n    if (instruction.hasOwnProperty(key)) {\r\n      break;\r\n    }\r\n  }\r\n  var instructionName = 'instructionNameFn' in options ? options.instructionNameFn(key, instruction[key], currentElementName, currentElement) : key;\r\n  if (typeof instruction[key] === 'object') {\r\n    currentElement = instruction;\r\n    currentElementName = instructionName;\r\n    return '<?' + instructionName + writeAttributes(instruction[key][options.attributesKey], options, depth) + '?>';\r\n  } else {\r\n    var instructionValue = instruction[key] ? instruction[key] : '';\r\n    if ('instructionFn' in options) instructionValue = options.instructionFn(instructionValue, key, currentElementName, currentElement);\r\n    return '<?' + instructionName + (instructionValue ? ' ' + instructionValue : '') + '?>';\r\n  }\r\n}\r\n\r\nfunction writeComment(comment, options) {\r\n  return options.ignoreComment ? '' : '<!--' + ('commentFn' in options ? options.commentFn(comment, currentElementName, currentElement) : comment) + '-->';\r\n}\r\n\r\nfunction writeCdata(cdata, options) {\r\n  return options.ignoreCdata ? '' : '<![CDATA[' + ('cdataFn' in options ? options.cdataFn(cdata, currentElementName, currentElement) : cdata) + ']]>';\r\n}\r\n\r\nfunction writeDoctype(doctype, options) {\r\n  return options.ignoreDoctype ? '' : '<!DOCTYPE ' + ('doctypeFn' in options ? options.doctypeFn(doctype, currentElementName, currentElement) : doctype) + '>';\r\n}\r\n\r\nfunction writeText(text, options) {\r\n  if (options.ignoreText) return '';\r\n  text = '' + text; // ensure Number and Boolean are converted to String\r\n  text = text.replace(/&amp;/g, '&'); // desanitize to avoid double sanitization\r\n  text = text.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\r\n  return 'textFn' in options ? options.textFn(text, currentElementName, currentElement) : text;\r\n}\r\n\r\nfunction hasContent(element, options) {\r\n  var i;\r\n  if (element.elements && element.elements.length) {\r\n    for (i = 0; i < element.elements.length; ++i) {\r\n      switch (element.elements[i][options.typeKey]) {\r\n      case 'text':\r\n        if (options.indentText) {\r\n          return true;\r\n        }\r\n        break; // skip to next key\r\n      case 'cdata':\r\n        if (options.indentCdata) {\r\n          return true;\r\n        }\r\n        break; // skip to next key\r\n      case 'instruction':\r\n        if (options.indentInstruction) {\r\n          return true;\r\n        }\r\n        break; // skip to next key\r\n      case 'doctype':\r\n      case 'comment':\r\n      case 'element':\r\n        return true;\r\n      default:\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction writeElement(element, options, depth) {\r\n  currentElement = element;\r\n  currentElementName = element.name;\r\n  var xml = '', elementName = 'elementNameFn' in options ? options.elementNameFn(element.name, element) : element.name;\r\n  xml += '<' + elementName;\r\n  if (element[options.attributesKey]) {\r\n    xml += writeAttributes(element[options.attributesKey], options, depth);\r\n  }\r\n  var withClosingTag = element[options.elementsKey] && element[options.elementsKey].length || element[options.attributesKey] && element[options.attributesKey]['xml:space'] === 'preserve';\r\n  if (!withClosingTag) {\r\n    if ('fullTagEmptyElementFn' in options) {\r\n      withClosingTag = options.fullTagEmptyElementFn(element.name, element);\r\n    } else {\r\n      withClosingTag = options.fullTagEmptyElement;\r\n    }\r\n  }\r\n  if (withClosingTag) {\r\n    xml += '>';\r\n    if (element[options.elementsKey] && element[options.elementsKey].length) {\r\n      xml += writeElements(element[options.elementsKey], options, depth + 1);\r\n      currentElement = element;\r\n      currentElementName = element.name;\r\n    }\r\n    xml += options.spaces && hasContent(element, options) ? '\\n' + Array(depth + 1).join(options.spaces) : '';\r\n    xml += '</' + elementName + '>';\r\n  } else {\r\n    xml += '/>';\r\n  }\r\n  return xml;\r\n}\r\n\r\nfunction writeElements(elements, options, depth, firstLine) {\r\n  return elements.reduce(function (xml, element) {\r\n    var indent = writeIndentation(options, depth, firstLine && !xml);\r\n    switch (element.type) {\r\n    case 'element': return xml + indent + writeElement(element, options, depth);\r\n    case 'comment': return xml + indent + writeComment(element[options.commentKey], options);\r\n    case 'doctype': return xml + indent + writeDoctype(element[options.doctypeKey], options);\r\n    case 'cdata': return xml + (options.indentCdata ? indent : '') + writeCdata(element[options.cdataKey], options);\r\n    case 'text': return xml + (options.indentText ? indent : '') + writeText(element[options.textKey], options);\r\n    case 'instruction':\r\n      var instruction = {};\r\n      instruction[element[options.nameKey]] = element[options.attributesKey] ? element : element[options.instructionKey];\r\n      return xml + (options.indentInstruction ? indent : '') + writeInstruction(instruction, options, depth);\r\n    }\r\n  }, '');\r\n}\r\n\r\nfunction hasContentCompact(element, options, anyContent) {\r\n  var key;\r\n  for (key in element) {\r\n    if (element.hasOwnProperty(key)) {\r\n      switch (key) {\r\n      case options.parentKey:\r\n      case options.attributesKey:\r\n        break; // skip to next key\r\n      case options.textKey:\r\n        if (options.indentText || anyContent) {\r\n          return true;\r\n        }\r\n        break; // skip to next key\r\n      case options.cdataKey:\r\n        if (options.indentCdata || anyContent) {\r\n          return true;\r\n        }\r\n        break; // skip to next key\r\n      case options.instructionKey:\r\n        if (options.indentInstruction || anyContent) {\r\n          return true;\r\n        }\r\n        break; // skip to next key\r\n      case options.doctypeKey:\r\n      case options.commentKey:\r\n        return true;\r\n      default:\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction writeElementCompact(element, name, options, depth, indent) {\r\n  currentElement = element;\r\n  currentElementName = name;\r\n  var elementName = 'elementNameFn' in options ? options.elementNameFn(name, element) : name;\r\n  if (typeof element === 'undefined' || element === null) {\r\n    return 'fullTagEmptyElementFn' in options && options.fullTagEmptyElementFn(name, element) || options.fullTagEmptyElement ? '<' + elementName + '></' + elementName + '>' : '<' + elementName + '/>';\r\n  }\r\n  var xml = '';\r\n  if (name) {\r\n    xml += '<' + elementName;\r\n    if (typeof element !== 'object') {\r\n      xml += '>' + writeText(element,options) + '</' + elementName + '>';\r\n      return xml;\r\n    }\r\n    if (element[options.attributesKey]) {\r\n      xml += writeAttributes(element[options.attributesKey], options, depth);\r\n    }\r\n    var withClosingTag = hasContentCompact(element, options, true) || element[options.attributesKey] && element[options.attributesKey]['xml:space'] === 'preserve';\r\n    if (!withClosingTag) {\r\n      if ('fullTagEmptyElementFn' in options) {\r\n        withClosingTag = options.fullTagEmptyElementFn(name, element);\r\n      } else {\r\n        withClosingTag = options.fullTagEmptyElement;\r\n      }\r\n    }\r\n    if (withClosingTag) {\r\n      xml += '>';\r\n    } else {\r\n      xml += '/>';\r\n      return xml;\r\n    }\r\n  }\r\n  xml += writeElementsCompact(element, options, depth + 1, false);\r\n  currentElement = element;\r\n  currentElementName = name;\r\n  if (name) {\r\n    xml += (indent ? writeIndentation(options, depth, false) : '') + '</' + elementName + '>';\r\n  }\r\n  return xml;\r\n}\r\n\r\nfunction writeElementsCompact(element, options, depth, firstLine) {\r\n  var i, key, nodes, xml = '';\r\n  for (key in element) {\r\n    if (element.hasOwnProperty(key)) {\r\n      nodes = isArray(element[key]) ? element[key] : [element[key]];\r\n      for (i = 0; i < nodes.length; ++i) {\r\n        switch (key) {\r\n        case options.declarationKey: xml += writeDeclaration(nodes[i], options, depth); break;\r\n        case options.instructionKey: xml += (options.indentInstruction ? writeIndentation(options, depth, firstLine) : '') + writeInstruction(nodes[i], options, depth); break;\r\n        case options.attributesKey: case options.parentKey: break; // skip\r\n        case options.textKey: xml += (options.indentText ? writeIndentation(options, depth, firstLine) : '') + writeText(nodes[i], options); break;\r\n        case options.cdataKey: xml += (options.indentCdata ? writeIndentation(options, depth, firstLine) : '') + writeCdata(nodes[i], options); break;\r\n        case options.doctypeKey: xml += writeIndentation(options, depth, firstLine) + writeDoctype(nodes[i], options); break;\r\n        case options.commentKey: xml += writeIndentation(options, depth, firstLine) + writeComment(nodes[i], options); break;\r\n        default: xml += writeIndentation(options, depth, firstLine) + writeElementCompact(nodes[i], key, options, depth, hasContentCompact(nodes[i], options));\r\n        }\r\n        firstLine = firstLine && !xml;\r\n      }\r\n    }\r\n  }\r\n  return xml;\r\n}\r\n\r\nmodule.exports = function (js, options) {\r\n  options = validateOptions(options);\r\n  var xml = '';\r\n  currentElement = js;\r\n  currentElementName = '_root_';\r\n  if (options.compact) {\r\n    xml = writeElementsCompact(js, options, 0, true);\r\n  } else {\r\n    if (js[options.declarationKey]) {\r\n      xml += writeDeclaration(js[options.declarationKey], options, 0);\r\n    }\r\n    if (js[options.elementsKey] && js[options.elementsKey].length) {\r\n      xml += writeElements(js[options.elementsKey], options, 0, !xml);\r\n    }\r\n  }\r\n  return xml;\r\n};\r\n","/**\n * VAST documents interface.\n * this file has copied from https://github.com/etf1/IAB\n */\n/**\n * Ad types.\n */\nexport var AdType;\n(function (AdType) {\n    AdType[\"inline\"] = \"inline\";\n    AdType[\"wrapper\"] = \"wrapper\";\n})(AdType || (AdType = {}));\n/**\n * Ad pricing models.\n */\nexport var AdPricingModel;\n(function (AdPricingModel) {\n    // Cost per click.\n    AdPricingModel[\"cpc\"] = \"cpc\";\n    // Cost per mille.\n    AdPricingModel[\"cpm\"] = \"cpm\";\n    // Cost per engagement.\n    AdPricingModel[\"cpe\"] = \"cpe\";\n    // Cost per view.\n    AdPricingModel[\"cpv\"] = \"cpv\";\n})(AdPricingModel || (AdPricingModel = {}));\n/**\n * Creative types.\n */\nexport var CreativeType;\n(function (CreativeType) {\n    // Linear ad.\n    CreativeType[\"linear\"] = \"linear\";\n})(CreativeType || (CreativeType = {}));\n/**\n * Tracking event types.\n */\nexport var TrackingEventType;\n(function (TrackingEventType) {\n    TrackingEventType[\"creativeView\"] = \"creativeView\";\n    TrackingEventType[\"start\"] = \"start\";\n    TrackingEventType[\"firstQuartile\"] = \"firstQuartile\";\n    TrackingEventType[\"midpoint\"] = \"midpoint\";\n    TrackingEventType[\"thirdQuartile\"] = \"thirdQuartile\";\n    TrackingEventType[\"complete\"] = \"complete\";\n    TrackingEventType[\"mute\"] = \"mute\";\n    TrackingEventType[\"unmute\"] = \"unmute\";\n    TrackingEventType[\"pause\"] = \"pause\";\n    TrackingEventType[\"rewind\"] = \"rewind\";\n    TrackingEventType[\"resume\"] = \"resume\";\n    TrackingEventType[\"fullscreen\"] = \"fullscreen\";\n    TrackingEventType[\"exitFullscreen\"] = \"exitFullscreen\";\n    TrackingEventType[\"expand\"] = \"expand\";\n    TrackingEventType[\"collapse\"] = \"collapse\";\n    TrackingEventType[\"acceptInvitation\"] = \"acceptInvitation\";\n    TrackingEventType[\"close\"] = \"close\";\n    TrackingEventType[\"skip\"] = \"skip\";\n    TrackingEventType[\"progress\"] = \"progress\";\n})(TrackingEventType || (TrackingEventType = {}));\n/**\n * mimeType enum\n */\nexport var mimetype;\n(function (mimetype) {\n    mimetype[\"IMAGE_GIF\"] = \"image/gif\";\n    mimetype[\"IMAGE_PNG\"] = \"image/png\";\n    mimetype[\"IMAGE_JPEG\"] = \"image/jpeg\";\n    mimetype[\"VIDEO_MP4\"] = \"video/mp4\";\n})(mimetype || (mimetype = {}));\n/**\n * Mediafile delivery types.\n */\nexport var DeliveryType;\n(function (DeliveryType) {\n    DeliveryType[DeliveryType[\"streaming\"] = 1] = \"streaming\";\n    DeliveryType[DeliveryType[\"progressive\"] = 2] = \"progressive\";\n})(DeliveryType || (DeliveryType = {}));\n//# sourceMappingURL=VAST3.js.map","var helper = require('./options-helper');\nvar xml2js = require('./xml2js');\n\nfunction validateOptions (userOptions) {\n  var options = helper.copyOptions(userOptions);\n  helper.ensureSpacesExists(options);\n  return options;\n}\n\nmodule.exports = function(xml, userOptions) {\n  var options, js, json, parentKey;\n  options = validateOptions(userOptions);\n  js = xml2js(xml, options);\n  parentKey = 'compact' in options && options.compact ? '_parent' : 'parent';\n  // parentKey = ptions.compact ? '_parent' : 'parent'; // consider this\n  if ('addParent' in options && options.addParent) {\n    json = JSON.stringify(js, function (k, v) { return k === parentKey? '_' : v; }, options.spaces);\n  } else {\n    json = JSON.stringify(js, null, options.spaces);\n  }\n  return json.replace(/\\u2028/g, '\\\\u2028').replace(/\\u2029/g, '\\\\u2029');\n};\n","/**\n * Parse VMAP document to Json\n */\nimport xmlConvert from \"xml-js\";\nimport { AdType, CreativeType } from \"../definitions/VAST3\";\n/**\n * main class for parse VMAP xml\n */\nvar VMAPParser = /** @class */ (function () {\n    /**\n     * @constructor\n     * Set initial value\n     * @param {string} xml\n     */\n    function VMAPParser(xml, debugMode) {\n        if (debugMode === void 0) { debugMode = false; }\n        this.debugMode = false;\n        if (xml)\n            this.xml = xml;\n        this.debugMode = debugMode;\n    }\n    /**\n     * Parse input xml string to IVMAP Object\n     * @param {string} xml\n     * @returns {IVMAP}\n     */\n    VMAPParser.prototype.JSON = function (xml) {\n        if (!xml && !this.xml) {\n            throw (new Error(\"XML input is required.\"));\n        }\n        var xmlString = xml || this.xml;\n        var xmlObj = xmlConvert.xml2json(xmlString, {\n            compact: true,\n            spaces: 4\n        });\n        var VMAP = JSON.parse(xmlObj).VMAP;\n        var breaks = Array.isArray(VMAP.AdBreak) ? VMAP.AdBreak : [VMAP.AdBreak];\n        return {\n            version: this.getVersion(VMAP),\n            breaks: breaks.map(this.getBreaks.bind(this))\n        };\n    };\n    /**\n     * Parse version of VMAP\n     * @param VMAP\n     * @returns {string}\n     */\n    VMAPParser.prototype.getVersion = function (VMAP) {\n        return VMAP._attributes ? VMAP._attributes.version : null;\n    };\n    /**\n     * Parse ad breaks\n     * @param AdBreak\n     * @returns {IAdBreak}\n     */\n    VMAPParser.prototype.getBreaks = function (AdBreak) {\n        return {\n            breakTypes: [AdBreak._attributes ? AdBreak._attributes.breakType : null],\n            breakId: AdBreak._attributes ? AdBreak._attributes.breakId : null,\n            timeOffset: AdBreak._attributes ? AdBreak._attributes.timeOffset : null,\n            adSource: {\n                id: AdBreak.AdSource._attributes\n                    ? AdBreak.AdSource._attributes.id\n                    : null,\n                VASTAdData: this.parseVASTAdDataAds(AdBreak.AdSource.VASTAdData.VAST),\n                adDataType: AdBreak.AdSource.adDataType,\n                adTagURI: AdBreak.AdSource.adTagURL,\n                allowMultipleAds: AdBreak.AdSource.allowMultipleAds,\n                dataType: AdBreak.AdSource._attributes\n                    ? AdBreak.AdSource._attributes.dataType\n                    : null,\n                followRedirects: AdBreak.AdSource._attributes\n                    ? AdBreak.AdSource._attributes.followRedirects\n                    : null,\n                customAdData: AdBreak.AdSource.customAdData\n            },\n            extensions: AdBreak.Extensions\n                ? this.parseExtensions(AdBreak.Extensions.Extension)\n                : [],\n            repeatAfter: AdBreak._attributes.repeatAfter\n        };\n    };\n    /**\n     * Parse Vast ad Data\n     * @param vast\n     * @returns {IVAST3}\n     */\n    VMAPParser.prototype.parseVASTAdDataAds = function (vast) {\n        return {\n            version: vast._attributes ? vast._attributes.version : null,\n            ads: this.parseAd(vast.Ad)\n        };\n    };\n    /**\n     * Parse ad\n     * @param ad\n     * @returns {Ad[]}\n     */\n    VMAPParser.prototype.parseAd = function (ad) {\n        if (this.debugMode)\n            console.debug(\"Parse ad\", ad.InLine);\n        // if (ad[\"InLine\"]) {\n        var liner = {\n            id: ad._attributes.id,\n            adSystem: {\n                version: ad.InLine.AdSystem._attributes\n                    ? ad.InLine.AdSystem._attributes.version\n                    : null,\n                name: ad.InLine.AdSystem._cdata\n            },\n            adTitle: ad.InLine.AdTitle._cdata,\n            adType: AdType.inline,\n            extensions: ad.InLine.Extensions.Extension\n                ? this.parseExtensions(ad.InLine.Extensions.Extension)\n                : [],\n            creative: this.parseCreative(ad.InLine.Creatives.Creative),\n            error: ad.InLine.Error ? ad.InLine.Error._text : null,\n            sequence: ad.InLine.Sequence ? ad.InLine.Sequence._text : null,\n            description: ad.InLine.Description._text,\n            advertiser: ad.InLine.Advertiser ? ad.InLine.Advertiser._text : null,\n            pricing: {\n                value: ad.InLine.Pricing._text,\n                currency: ad.InLine.Pricing._attributes\n                    ? ad.InLine.Pricing._attributes.currency\n                    : null,\n                model: ad.InLine.Pricing._attributes\n                    ? ad.InLine.Pricing._attributes.model\n                    : null\n            },\n            survey: ad.InLine.Survey._text || ad.InLine.Survey._cdata,\n            impressions: ad.InLine.Impression\n                ? this.parseImpression(ad.InLine.Impression)\n                : []\n        };\n        return [liner];\n        // }\n    };\n    /**\n     * Parse Creative\n     * @param creativeInput\n     * @returns {ICreative[]}\n     */\n    VMAPParser.prototype.parseCreative = function (creativeInput) {\n        var _this = this;\n        var creativeArray = creativeInput;\n        if (!Array.isArray(creativeInput)) {\n            creativeArray = [creativeInput];\n        }\n        var creativeOutputArray = [];\n        creativeArray.forEach(function (creative) {\n            var c = {\n                id: creative._attributes ? creative._attributes.id : null,\n                adID: creative._attributes ? creative._attributes.AdID : null,\n                sequence: creative._attributes ? creative._attributes.sequence : null,\n                skipoffset: creative.Linear._attributes.skipoffset,\n                trackings: _this.parseTrackingEvents(creative.Linear.TrackingEvents.Tracking),\n                videoClicks: _this.parseVideoClicks(creative.Linear.VideoClicks),\n                extensions: creative.CreativeExtensions,\n                mediaFiles: _this.parseMediaFile(creative.Linear.MediaFiles.MediaFile),\n                duration: creative.Linear.Duration._text,\n                creativeType: CreativeType.linear\n            };\n            creativeOutputArray.push(c);\n        });\n        return creativeOutputArray;\n    };\n    /**\n     * Parse MediaFile\n     * @param mediaFilesInput\n     * @returns {IMediaFile[]}\n     */\n    VMAPParser.prototype.parseMediaFile = function (mediaFilesInput) {\n        var mediaFilesArray = mediaFilesInput;\n        if (!Array.isArray(mediaFilesInput)) {\n            mediaFilesArray = [mediaFilesInput];\n        }\n        var mediaFilesOutputArray = [];\n        mediaFilesArray.forEach(function (file) {\n            var f = {\n                id: file._attributes ? file._attributes.id : null,\n                height: file._attributes ? file._attributes.height : null,\n                width: file._attributes ? file._attributes.width : null,\n                delivery: file._attributes ? file._attributes.delivery : null,\n                codec: file._attributes ? file._attributes.codec : null,\n                mimetype: file._attributes ? file._attributes.type : null,\n                apiFramework: file._attributes ? file._attributes.apiFramework : null,\n                bitrate: file._attributes ? file._attributes.bitrate : null,\n                minBitrate: file._attributes ? file._attributes.minBitrate : null,\n                maxBitrate: file._attributes ? file._attributes.maxBitrate : null,\n                scalable: file._attributes ? file._attributes.scalable : null,\n                maintainAspectRatio: file._attributes\n                    ? file._attributes.maintainAspectRatio\n                    : null,\n                uri: file._cdata\n            };\n            mediaFilesOutputArray.push(f);\n        });\n        return mediaFilesOutputArray;\n    };\n    /**\n     * Parse TrackingEvents\n     * @param trackingInput\n     * @returns {ITrackingEvent[]}\n     */\n    VMAPParser.prototype.parseTrackingEvents = function (trackingInput) {\n        var trackingInputArray = trackingInput;\n        if (!Array.isArray(trackingInput)) {\n            trackingInputArray = [trackingInput];\n        }\n        var trackingOutputArray = [];\n        trackingInputArray.forEach(function (tracking) {\n            var f = {\n                uri: tracking._cdata,\n                event: tracking._attributes ? tracking._attributes.event : null\n            };\n            trackingOutputArray.push(f);\n        });\n        return trackingOutputArray;\n    };\n    /**\n     * Parse VideoClicks\n     * @param videoClickInput\n     * @returns {IVideoClick}\n     */\n    VMAPParser.prototype.parseVideoClicks = function (videoClickInput) {\n        var f = {\n            clickTrackings: [],\n            clickThrough: { uri: \"\", id: \"\" }\n        };\n        if (videoClickInput.ClickThrough) {\n            f.clickThrough = {\n                uri: videoClickInput.ClickThrough._cdata,\n                id: videoClickInput.ClickThrough._attributes\n                    ? videoClickInput.ClickThrough._attributes.id\n                    : null\n            };\n        }\n        if (videoClickInput.clickTrackings) {\n            var clickTracking = videoClickInput.clickTrackings;\n            if (!Array.isArray(videoClickInput.clickTrackings)) {\n                clickTracking = [clickTracking];\n            }\n            f.clickTrackings = [];\n            clickTracking.forEach(function (c) {\n                if (f.clickTrackings) {\n                    f.clickTrackings.push({\n                        uri: c._cdata,\n                        id: c._attributes ? c._attributes.id : null\n                    });\n                }\n            });\n        }\n        if (videoClickInput.customClicks) {\n            var customClicks = videoClickInput.customClicks;\n            if (!Array.isArray(videoClickInput.customClicks)) {\n                customClicks = [customClicks];\n            }\n            f.customClicks = [];\n            customClicks.forEach(function (c) {\n                if (f.customClicks) {\n                    f.customClicks.push({\n                        uri: c._cdata,\n                        id: c._attributes ? c._attributes.id : null\n                    });\n                }\n            });\n        }\n        return f;\n    };\n    /**\n     * Parse Extensions\n     * @param extensionsInput\n     * @returns {IExtension[]}\n     */\n    VMAPParser.prototype.parseExtensions = function (extensionsInput) {\n        var extensionsArray = extensionsInput;\n        if (!Array.isArray(extensionsInput)) {\n            extensionsArray = [extensionsInput];\n        }\n        var extensionsOutputArray = [];\n        extensionsArray.forEach(function (extension) {\n            var e = {\n                value: extension._text,\n                extensionType: extension._attributes ? extension._attributes.type : null\n            };\n            extensionsOutputArray.push(e);\n        });\n        return extensionsOutputArray;\n    };\n    /**\n     * Parse Impressions\n     * @param impressionInput\n     * @returns {IAdImpression[]}\n     */\n    VMAPParser.prototype.parseImpression = function (impressionInput) {\n        if (this.debugMode)\n            console.debug(\"parse Impression\", impressionInput._cdata);\n        var impressionInputArray = impressionInput;\n        if (!Array.isArray(impressionInput)) {\n            impressionInputArray = [impressionInput];\n        }\n        var impressionOutput = [];\n        impressionInputArray.forEach(function (impression) {\n            impressionOutput.push({\n                uri: impression._cdata\n            });\n        });\n        return impressionOutput;\n    };\n    return VMAPParser;\n}());\nexport { VMAPParser };\n/**\n * export new Object of class\n */\nexport default new VMAPParser();\n//# sourceMappingURL=index.js.map"],"names":["options","currentElement","sax","parser","strict","opt","SAXParser","SAXStream","createStream","MAX_BUFFER_LENGTH","Stream","buffers","this","i","l","length","clearBuffers","q","c","bufferCheckPosition","lowercase","lowercasetags","looseCase","tags","closed","closedRoot","sawRoot","tag","error","noscript","state","S","BEGIN","strictEntities","ENTITIES","Object","create","XML_ENTITIES","attribList","xmlns","ns","rootNS","trackPosition","position","line","column","emit","EVENTS","o","F","prototype","keys","a","hasOwnProperty","push","end","write","chunk","toString","charAt","BEGIN_WHITESPACE","beginWhiteSpace","TEXT","starti","textNode","substring","isWhitespace","strictFail","TEXT_ENTITY","OPEN_WAKA","startTagPosition","SCRIPT","SCRIPT_ENDING","script","CLOSE_TAG","SGML_DECL","sgmlDecl","isMatch","nameStart","OPEN_TAG","tagName","PROC_INST","procInstName","procInstBody","pad","Array","join","toUpperCase","CDATA","emitNode","cdata","COMMENT","comment","DOCTYPE","doctype","isQuote","SGML_DECL_QUOTED","DOCTYPE_DTD","DOCTYPE_QUOTED","DOCTYPE_DTD_QUOTED","COMMENT_ENDING","COMMENT_ENDED","textopts","CDATA_ENDING","CDATA_ENDING_2","PROC_INST_ENDING","PROC_INST_BODY","name","body","nameBody","newTag","openTag","OPEN_TAG_SLASH","ATTRIB","closeTag","attribName","attribValue","ATTRIB_NAME","ATTRIB_VALUE","attrib","ATTRIB_NAME_SAW_WHITE","attributes","value","ATTRIB_VALUE_QUOTED","ATTRIB_VALUE_UNQUOTED","ATTRIB_VALUE_ENTITY_Q","ATTRIB_VALUE_CLOSED","isAttribEnd","ATTRIB_VALUE_ENTITY_U","CLOSE_TAG_SAW_WHITE","notMatch","returnState","buffer","parseEntity","entity","entityBody","entityStart","Error","maxAllowed","Math","max","maxActual","len","closeText","m","checkBufferLength","resume","close","flush","require$$0","ex","streamWraps","filter","ev","apply","_parser","writable","readable","me","onend","onerror","er","_decoder","forEach","defineProperty","get","set","h","removeAllListeners","on","enumerable","configurable","constructor","data","Buffer","isBuffer","SD","require$$1","StringDecoder","handler","indexOf","args","arguments","splice","call","XML_NAMESPACE","XMLNS_NAMESPACE","xml","regex","test","stringFromCharCode","floor","fromCodePoint","s","STATE","COMMENT_STARTING","amp","gt","lt","quot","apos","AElig","Aacute","Acirc","Agrave","Aring","Atilde","Auml","Ccedil","ETH","Eacute","Ecirc","Egrave","Euml","Iacute","Icirc","Igrave","Iuml","Ntilde","Oacute","Ocirc","Ograve","Oslash","Otilde","Ouml","THORN","Uacute","Ucirc","Ugrave","Uuml","Yacute","aacute","acirc","aelig","agrave","aring","atilde","auml","ccedil","eacute","ecirc","egrave","eth","euml","iacute","icirc","igrave","iuml","ntilde","oacute","ocirc","ograve","oslash","otilde","ouml","szlig","thorn","uacute","ucirc","ugrave","uuml","yacute","yuml","copy","reg","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","ordf","laquo","not","shy","macr","deg","plusmn","sup1","sup2","sup3","acute","micro","para","middot","cedil","ordm","raquo","frac14","frac12","frac34","iquest","times","divide","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","tilde","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","prop","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","key","e","String","fromCharCode","event","nodeType","text","trim","normalize","replace","message","parent","qname","attribute","qualName","split","prefix","local","qn","selfClosing","uri","JSON","stringify","p","nv","isSelfClosing","toLowerCase","t","closeTo","pop","x","n","num","entityLC","numStr","slice","parseInt","isNaN","result","highSurrogate","lowSurrogate","codeUnits","index","codePoint","Number","isFinite","RangeError","exports","copyOptions","ensureFlagExists","item","ensureSpacesExists","spaces","ensureKeyExists","compact","checkFnExists","isArray","addField","type","alwaysArray","instructionFn","temp","instructionNameFn","elementsKey","element","typeKey","nameKey","instructionHasAttributes","attributesKey","instructionKey","addParent","parentKey","manipulateAttributes","attributesFn","attributeValueFn","attributeNameFn","onInstruction","instruction","match","attrsRegExp","exec","ignoreDeclaration","declarationKey","ignoreInstruction","onStartElement","elementNameFn","ignoreAttributes","alwaysChildren","onText","ignoreText","captureSpacesBetweenElements","nativeType","nValue","bValue","sanitize","onComment","ignoreComment","onEndElement","parentElement","onCdata","ignoreCdata","onDoctype","ignoreDoctype","onError","note","userOptions","helper","validateOptions","onopentag","ontext","oncomment","onclosetag","oncdata","ondoctype","onprocessinginstruction","AdType","AdPricingModel","CreativeType","TrackingEventType","mimetype","DeliveryType","js","xml2js","k","v","VMAPParser","debugMode","xmlString","xmlObj","xmlConvert","VMAP","parse","breaks","AdBreak","version","getVersion","map","getBreaks","bind","_attributes","breakTypes","breakType","breakId","timeOffset","adSource","id","AdSource","VASTAdData","parseVASTAdDataAds","VAST","adDataType","adTagURI","adTagURL","allowMultipleAds","dataType","followRedirects","customAdData","extensions","Extensions","parseExtensions","Extension","repeatAfter","vast","ads","parseAd","Ad","ad","console","debug","InLine","adSystem","AdSystem","_cdata","adTitle","AdTitle","adType","inline","creative","parseCreative","Creatives","Creative","_text","sequence","Sequence","description","Description","advertiser","Advertiser","pricing","Pricing","currency","model","survey","Survey","impressions","Impression","parseImpression","creativeInput","_this","creativeArray","creativeOutputArray","adID","AdID","skipoffset","Linear","trackings","parseTrackingEvents","TrackingEvents","Tracking","videoClicks","parseVideoClicks","VideoClicks","CreativeExtensions","mediaFiles","parseMediaFile","MediaFiles","MediaFile","duration","Duration","creativeType","linear","mediaFilesInput","mediaFilesArray","mediaFilesOutputArray","file","f","height","width","delivery","codec","apiFramework","bitrate","minBitrate","maxBitrate","scalable","maintainAspectRatio","trackingInput","trackingInputArray","trackingOutputArray","tracking","videoClickInput","clickTrackings","clickThrough","ClickThrough","clickTracking","customClicks","extensionsInput","extensionsArray","extensionsOutputArray","extension","extensionType","impressionInput","impressionInputArray","impressionOutput","impression"],"mappings":"6XAKIA,EAEAC,oBCPJ,SAAYC,GACVA,EAAIC,OAAS,SAAUC,EAAQC,GAAO,OAAO,IAAIC,EAAUF,EAAQC,IACnEH,EAAII,UAAYA,EAChBJ,EAAIK,UAAYA,EAChBL,EAAIM,aAuKJ,SAAuBJ,EAAQC,GAC7B,OAAO,IAAIE,EAAUH,EAAQC,IA7J/BH,EAAIO,kBAAoB,MAExB,IA+IIC,EA/IAC,GACF,UAAW,WAAY,WAAY,UAAW,UAC9C,eAAgB,eAAgB,SAAU,aAC1C,cAAe,QAAS,UAwB1B,SAASL,EAAWF,EAAQC,GAC1B,KAAMO,gBAAgBN,GACpB,OAAO,IAAIA,EAAUF,EAAQC,IAwFjC,SAAuBF,GACrB,IAAK,IAAIU,EAAI,EAAGC,EAAIH,EAAQI,OAAQF,EAAIC,EAAGD,IACzCV,EAAOQ,EAAQE,IAAM,GAtFvBG,CADaJ,MAAAA,KAENK,EAFML,KAEKM,EAAI,GAFTN,KAGNO,oBAAsBjB,EAAIO,kBAHpBG,KAINP,IAAMA,MAJAO,KAKNP,IAAIe,UALER,KAKiBP,IAAIe,WALrBR,KAKyCP,IAAIgB,cAL7CT,KAMNU,UANMV,KAMaP,IAAIe,UAAY,cAAgB,cAN7CR,KAONW,QAPMX,KAQNY,OARMZ,KAQUa,WARVb,KAQ8Bc,SAAU,EARxCd,KASNe,IATMf,KASOgB,MAAQ,KATfhB,KAUNR,SAAWA,EAVLQ,KAWNiB,YAAczB,IAXRQ,KAWyBP,IAAIwB,UAX7BjB,KAYNkB,MAAQC,EAAEC,MAZJpB,KAaNqB,eAbMrB,KAakBP,IAAI4B,eAbtBrB,KAcNsB,SAdMtB,KAcYqB,eAAiBE,OAAOC,OAAOlC,EAAImC,cAAgBF,OAAOC,OAAOlC,EAAIgC,UAdjFtB,KAeN0B,cAfM1B,KAoBFP,IAAIkC,QApBF3B,KAqBJ4B,GAAKL,OAAOC,OAAOK,IArBf7B,KAyBN8B,eAAwC,IAzBlC9B,KAyBiBP,IAAIsC,SAzBrB/B,KA0BF8B,gBA1BE9B,KA2BJ+B,SA3BI/B,KA2BcgC,KA3BdhC,KA2B4BiC,OAAS,GAElDC,EA7BalC,KA6BA,WAvDfV,EAAI6C,QACF,OACA,wBACA,kBACA,UACA,UACA,eACA,YACA,UACA,WACA,YACA,QACA,aACA,QACA,MACA,QACA,SACA,gBACA,kBAwCGZ,OAAOC,SACVD,OAAOC,OAAS,SAAUY,GACxB,SAASC,KAGT,OAFAA,EAAEC,UAAYF,EACH,IAAIC,IAKdd,OAAOgB,OACVhB,OAAOgB,KAAO,SAAUH,GACtB,IAAII,KACJ,IAAK,IAAIvC,KAAKmC,EAAOA,EAAEK,eAAexC,IAAIuC,EAAEE,KAAKzC,GACjD,OAAOuC,IA0DX9C,EAAU4C,WACRK,IAAK,WAAcA,EAAI3C,OACvB4C,MA0yBF,SAAgBC,GAEd,GAAI7C,KAAKgB,MACP,MAAMhB,KAAKgB,MAEb,GAJahB,KAIFY,OACT,OAAOI,EALIhB,KAMT,wDAEJ,GAAc,OAAV6C,EACF,OAAOF,EATI3C,MAWQ,iBAAV6C,IACTA,EAAQA,EAAMC,YAEhB,IAAI7C,EAAI,EACJK,EAAI,GACR,KACEA,EAAIyC,EAAOF,EAAO5C,KAjBPD,KAkBJM,EAAIA,EAENA,GAcL,OAlCWN,KAwBA8B,gBAxBA9B,KAyBF+B,WACG,OAANzB,GA1BKN,KA2BAgC,OA3BAhC,KA4BAiC,OAAS,GA5BTjC,KA8BAiC,UA9BAjC,KAkCIkB,OACb,KAAKC,EAAEC,MAEL,GArCOpB,KAoCAkB,MAAQC,EAAE6B,iBACP,WAAN1C,EACF,SAEF2C,EAxCOjD,KAwCiBM,GACxB,SAEF,KAAKa,EAAE6B,iBACLC,EA5COjD,KA4CiBM,GACxB,SAEF,KAAKa,EAAE+B,KACL,GAhDOlD,KAgDIc,UAhDJd,KAgDuBa,WAAY,CAExC,IADA,IAAIsC,EAASlD,EAAI,EACVK,GAAW,MAANA,GAAmB,MAANA,IACvBA,EAAIyC,EAAOF,EAAO5C,OAnDfD,KAoDa8B,gBApDb9B,KAqDM+B,WACG,OAANzB,GAtDHN,KAuDQgC,OAvDRhC,KAwDQiC,OAAS,GAxDjBjC,KA0DQiC,UA1DRjC,KA8DEoD,UAAYP,EAAMQ,UAAUF,EAAQlD,EAAI,GAEvC,MAANK,GAhEGN,KAgEmBc,SAhEnBd,KAgEqCa,aAhErCb,KAgE2DR,QAI3D8D,EAAahD,IApEbN,KAoE4Bc,UApE5Bd,KAoE8Ca,YACjD0C,EArEGvD,KAqEgB,mCAEX,MAANM,EAvECN,KAwEIkB,MAAQC,EAAEqC,YAxEdxD,KA0EIoD,UAAY9C,IA1EhBN,KAiEEkB,MAAQC,EAAEsC,UAjEZzD,KAkEE0D,iBAlEF1D,KAkE4B+B,UAWnC,SAEF,KAAKZ,EAAEwC,OAEK,MAANrD,EAjFGN,KAkFEkB,MAAQC,EAAEyC,cAlFZ5D,KAoFE6D,QAAUvD,EAEnB,SAEF,KAAKa,EAAEyC,cACK,MAANtD,EAzFGN,KA0FEkB,MAAQC,EAAE2C,WA1FZ9D,KA4FE6D,QAAU,IAAMvD,EA5FlBN,KA6FEkB,MAAQC,EAAEwC,QAEnB,SAEF,KAAKxC,EAAEsC,UAEL,GAAU,MAANnD,EAnGGN,KAoGEkB,MAAQC,EAAE4C,UApGZ/D,KAqGEgE,SAAW,QACb,GAAIV,EAAahD,SAEjB,GAAI2D,EAAQC,EAAW5D,GAxGvBN,KAyGEkB,MAAQC,EAAEgD,SAzGZnE,KA0GEoE,QAAU9D,OACZ,GAAU,MAANA,EA3GJN,KA4GEkB,MAAQC,EAAE2C,UA5GZ9D,KA6GEoE,QAAU,QACZ,GAAU,MAAN9D,EA9GJN,KA+GEkB,MAAQC,EAAEkD,UA/GZrE,KAgHEsE,aAhHFtE,KAgHwBuE,aAAe,OACvC,CAGL,GAFAhB,EAlHKvD,KAkHc,eAlHdA,KAoHM0D,iBAAmB,EApHzB1D,KAoHoC+B,SAAU,CACjD,IAAIyC,EArHDxE,KAqHc+B,SArHd/B,KAqHgC0D,iBACnCpD,EAAI,IAAImE,MAAMD,GAAKE,KAAK,KAAOpE,EAtH5BN,KAwHEoD,UAAY,IAAM9C,EAxHpBN,KAyHEkB,MAAQC,EAAE+B,KAEnB,SAEF,KAAK/B,EAAE4C,WA7HE/D,KA8HKgE,SAAW1D,GAAGqE,gBAAkBC,GAC1CC,EA/HK7E,KA+HY,eA/HZA,KAgIEkB,MAAQC,EAAEyD,MAhIZ5E,KAiIEgE,SAAW,GAjIbhE,KAkIE8E,MAAQ,IAlIV9E,KAmIWgE,SAAW1D,IAAM,MAnI5BN,KAoIEkB,MAAQC,EAAE4D,QApIZ/E,KAqIEgF,QAAU,GArIZhF,KAsIEgE,SAAW,KAtIbhE,KAuIYgE,SAAW1D,GAAGqE,gBAAkBM,GAvI5CjF,KAwIEkB,MAAQC,EAAE8D,SAxIZjF,KAyIMkF,SAzINlF,KAyIwBc,UAC3ByC,EA1IGvD,KA2ID,+CA3ICA,KA6IEkF,QAAU,GA7IZlF,KA8IEgE,SAAW,IACH,MAAN1D,GACTuE,EAhJK7E,KAgJY,oBAhJZA,KAgJwCgE,UAhJxChE,KAiJEgE,SAAW,GAjJbhE,KAkJEkB,MAAQC,EAAE+B,MACRiC,EAAQ7E,IAnJZN,KAoJEkB,MAAQC,EAAEiE,iBApJZpF,KAqJEgE,UAAY1D,GArJdN,KAuJEgE,UAAY1D,EAErB,SAEF,KAAKa,EAAEiE,iBACD9E,IA5JGN,KA4JUK,IA5JVL,KA6JEkB,MAAQC,EAAE4C,UA7JZ/D,KA8JEK,EAAI,IA9JNL,KAgKAgE,UAAY1D,EACnB,SAEF,KAAKa,EAAE8D,QACK,MAAN3E,GApKGN,KAqKEkB,MAAQC,EAAE+B,KACjB2B,EAtKK7E,KAsKY,YAtKZA,KAsKgCkF,SAtKhClF,KAuKEkF,SAAU,IAvKZlF,KAyKEkF,SAAW5E,EACR,MAANA,EA1KCN,KA2KIkB,MAAQC,EAAEkE,YACRF,EAAQ7E,KA5KdN,KA6KIkB,MAAQC,EAAEmE,eA7KdtF,KA8KIK,EAAIC,IAGf,SAEF,KAAKa,EAAEmE,eAnLEtF,KAoLAkF,SAAW5E,EACdA,IArLGN,KAqLUK,IArLVL,KAsLEK,EAAI,GAtLNL,KAuLEkB,MAAQC,EAAE8D,SAEnB,SAEF,KAAK9D,EAAEkE,YA3LErF,KA4LAkF,SAAW5E,EACR,MAANA,EA7LGN,KA8LEkB,MAAQC,EAAE8D,QACRE,EAAQ7E,KA/LZN,KAgMEkB,MAAQC,EAAEoE,mBAhMZvF,KAiMEK,EAAIC,GAEb,SAEF,KAAKa,EAAEoE,mBArMEvF,KAsMAkF,SAAW5E,EACdA,IAvMGN,KAuMUK,IAvMVL,KAwMEkB,MAAQC,EAAEkE,YAxMZrF,KAyMEK,EAAI,IAEb,SAEF,KAAKc,EAAE4D,QACK,MAANzE,EA9MGN,KA+MEkB,MAAQC,EAAEqE,eA/MZxF,KAiNEgF,SAAW1E,EAEpB,SAEF,KAAKa,EAAEqE,eACK,MAANlF,GAtNGN,KAuNEkB,MAAQC,EAAEsE,cAvNZzF,KAwNEgF,QAAUU,EAxNZ1F,KAwN4BP,IAxN5BO,KAwNwCgF,SAxNxChF,KAyNMgF,SACTH,EA1NG7E,KA0Nc,YA1NdA,KA0NkCgF,SA1NlChF,KA4NEgF,QAAU,KA5NZhF,KA8NEgF,SAAW,IAAM1E,EA9NnBN,KA+NEkB,MAAQC,EAAE4D,SAEnB,SAEF,KAAK5D,EAAEsE,cACK,MAANnF,GACFiD,EArOKvD,KAqOc,qBArOdA,KAwOEgF,SAAW,KAAO1E,EAxOpBN,KAyOEkB,MAAQC,EAAE4D,SAzOZ/E,KA2OEkB,MAAQC,EAAE+B,KAEnB,SAEF,KAAK/B,EAAEyD,MACK,MAANtE,EAhPGN,KAiPEkB,MAAQC,EAAEwE,aAjPZ3F,KAmPE8E,OAASxE,EAElB,SAEF,KAAKa,EAAEwE,aACK,MAANrF,EAxPGN,KAyPEkB,MAAQC,EAAEyE,gBAzPZ5F,KA2PE8E,OAAS,IAAMxE,EA3PjBN,KA4PEkB,MAAQC,EAAEyD,OAEnB,SAEF,KAAKzD,EAAEyE,eACK,MAANtF,GAjQGN,KAkQM8E,OACTD,EAnQG7E,KAmQc,UAnQdA,KAmQgC8E,OAErCD,EArQK7E,KAqQY,gBArQZA,KAsQE8E,MAAQ,GAtQV9E,KAuQEkB,MAAQC,EAAE+B,MACF,MAAN5C,EAxQJN,KAyQE8E,OAAS,KAzQX9E,KA2QE8E,OAAS,KAAOxE,EA3QlBN,KA4QEkB,MAAQC,EAAEyD,OAEnB,SAEF,KAAKzD,EAAEkD,UACK,MAAN/D,EAjRGN,KAkREkB,MAAQC,EAAE0E,iBACRvC,EAAahD,GAnRjBN,KAoREkB,MAAQC,EAAE2E,eApRZ9F,KAsREsE,cAAgBhE,EAEzB,SAEF,KAAKa,EAAE2E,eACL,IA3RO9F,KA2RKuE,cAAgBjB,EAAahD,GACvC,SACe,MAANA,EA7RJN,KA8REkB,MAAQC,EAAE0E,iBA9RZ7F,KAgSEuE,cAAgBjE,EAEzB,SAEF,KAAKa,EAAE0E,iBACK,MAANvF,GACFuE,EAtSK7E,KAsSY,2BACf+F,KAvSG/F,KAuSUsE,aACb0B,KAxSGhG,KAwSUuE,eAxSVvE,KA0SEsE,aA1SFtE,KA0SwBuE,aAAe,GA1SvCvE,KA2SEkB,MAAQC,EAAE+B,OA3SZlD,KA6SEuE,cAAgB,IAAMjE,EA7SxBN,KA8SEkB,MAAQC,EAAE2E,gBAEnB,SAEF,KAAK3E,EAAEgD,SACDF,EAAQgC,EAAU3F,GAnTfN,KAoTEoE,SAAW9D,GAElB4F,EAtTKlG,MAuTK,MAANM,EACF6F,EAxTGnG,MAyTY,MAANM,EAzTNN,KA0TIkB,MAAQC,EAAEiF,gBAEZ9C,EAAahD,IAChBiD,EA7TCvD,KA6TkB,iCA7TlBA,KA+TIkB,MAAQC,EAAEkF,SAGrB,SAEF,KAAKlF,EAAEiF,eACK,MAAN9F,GACF6F,EAtUKnG,MAsUW,GAChBsG,EAvUKtG,QAyULuD,EAzUKvD,KAyUc,kDAzUdA,KA0UEkB,MAAQC,EAAEkF,QAEnB,SAEF,KAAKlF,EAAEkF,OAEL,GAAI/C,EAAahD,GACf,SACe,MAANA,EACT6F,EAnVKnG,MAoVU,MAANM,EApVJN,KAqVEkB,MAAQC,EAAEiF,eACRnC,EAAQC,EAAW5D,IAtVvBN,KAuVEuG,WAAajG,EAvVfN,KAwVEwG,YAAc,GAxVhBxG,KAyVEkB,MAAQC,EAAEsF,aAEjBlD,EA3VKvD,KA2Vc,0BAErB,SAEF,KAAKmB,EAAEsF,YACK,MAANnG,EAhWGN,KAiWEkB,MAAQC,EAAEuF,aACF,MAANpG,GACTiD,EAnWKvD,KAmWc,2BAnWdA,KAoWEwG,YApWFxG,KAoWuBuG,WAC5BI,EArWK3G,MAsWLmG,EAtWKnG,OAuWIsD,EAAahD,GAvWjBN,KAwWEkB,MAAQC,EAAEyF,sBACR3C,EAAQgC,EAAU3F,GAzWtBN,KA0WEuG,YAAcjG,EAErBiD,EA5WKvD,KA4Wc,0BAErB,SAEF,KAAKmB,EAAEyF,sBACL,GAAU,MAANtG,EAjXGN,KAkXEkB,MAAQC,EAAEuF,iBACZ,CAAA,GAAIpD,EAAahD,GACtB,SAEAiD,EAtXKvD,KAsXc,2BAtXdA,KAuXEe,IAAI8F,WAvXN7G,KAuXwBuG,YAAc,GAvXtCvG,KAwXEwG,YAAc,GACrB3B,EAzXK7E,KAyXY,eACf+F,KA1XG/F,KA0XUuG,WACbO,MAAO,KA3XJ9G,KA6XEuG,WAAa,GACV,MAANjG,EACF6F,EA/XGnG,MAgYMiE,EAAQC,EAAW5D,IAhYzBN,KAiYIuG,WAAajG,EAjYjBN,KAkYIkB,MAAQC,EAAEsF,cAEjBlD,EApYGvD,KAoYgB,0BApYhBA,KAqYIkB,MAAQC,EAAEkF,QAGrB,SAEF,KAAKlF,EAAEuF,aACL,GAAIpD,EAAahD,GACf,SACS6E,EAAQ7E,IA7YZN,KA8YEK,EAAIC,EA9YNN,KA+YEkB,MAAQC,EAAE4F,sBAEjBxD,EAjZKvD,KAiZc,4BAjZdA,KAkZEkB,MAAQC,EAAE6F,sBAlZZhH,KAmZEwG,YAAclG,GAEvB,SAEF,KAAKa,EAAE4F,oBACL,GAAIzG,IAxZGN,KAwZUK,EAAG,CACR,MAANC,EAzZCN,KA0ZIkB,MAAQC,EAAE8F,sBA1ZdjH,KA4ZIwG,aAAelG,EAExB,SAEFqG,EAhaO3G,MAAAA,KAiaAK,EAAI,GAjaJL,KAkaAkB,MAAQC,EAAE+F,oBACjB,SAEF,KAAK/F,EAAE+F,oBACD5D,EAAahD,GAtaVN,KAuaEkB,MAAQC,EAAEkF,OACF,MAAN/F,EACT6F,EAzaKnG,MA0aU,MAANM,EA1aJN,KA2aEkB,MAAQC,EAAEiF,eACRnC,EAAQC,EAAW5D,IAC5BiD,EA7aKvD,KA6ac,oCA7adA,KA8aEuG,WAAajG,EA9afN,KA+aEwG,YAAc,GA/ahBxG,KAgbEkB,MAAQC,EAAEsF,aAEjBlD,EAlbKvD,KAkbc,0BAErB,SAEF,KAAKmB,EAAE6F,sBACL,IAAKG,EAAY7G,GAAI,CACT,MAANA,EAxbCN,KAybIkB,MAAQC,EAAEiG,sBAzbdpH,KA2bIwG,aAAelG,EAExB,SAEFqG,EA/bO3G,MAgcG,MAANM,EACF6F,EAjcKnG,MAAAA,KAmcEkB,MAAQC,EAAEkF,OAEnB,SAEF,KAAKlF,EAAE2C,UACL,GAxcO9D,KAwcKoE,QAaK,MAAN9D,EACTgG,EAtdKtG,MAudIiE,EAAQgC,EAAU3F,GAvdtBN,KAwdEoE,SAAW9D,EAxdbN,KAydW6D,QAzdX7D,KA0dE6D,QAAU,KA1dZ7D,KA0d0BoE,QA1d1BpE,KA2dEoE,QAAU,GA3dZpE,KA4dEkB,MAAQC,EAAEwC,SAEZL,EAAahD,IAChBiD,EA/dGvD,KA+dgB,kCA/dhBA,KAieEkB,MAAQC,EAAEkG,yBAzBE,CACnB,GAAI/D,EAAahD,GACf,SACSgH,EAASpD,EAAW5D,GA3c1BN,KA4cQ6D,QA5cR7D,KA6cM6D,QAAU,KAAOvD,EA7cvBN,KA8cMkB,MAAQC,EAAEwC,QAEjBJ,EAhdCvD,KAgdkB,mCAhdlBA,KAmdIoE,QAAU9D,EAgBrB,SAEF,KAAKa,EAAEkG,oBACL,GAAI/D,EAAahD,GACf,SAEQ,MAANA,EACFgG,EA1eKtG,MA4eLuD,EA5eKvD,KA4ec,qCAErB,SAEF,KAAKmB,EAAEqC,YACP,KAAKrC,EAAE8F,sBACP,KAAK9F,EAAEiG,sBACL,IAAIG,EACAC,EACJ,OArfOxH,KAqfQkB,OACb,KAAKC,EAAEqC,YACL+D,EAAcpG,EAAE+B,KAChBsE,EAAS,WACT,MAEF,KAAKrG,EAAE8F,sBACLM,EAAcpG,EAAE4F,oBAChBS,EAAS,cACT,MAEF,KAAKrG,EAAEiG,sBACLG,EAAcpG,EAAE6F,sBAChBQ,EAAS,cAIH,MAANlH,GAtgBGN,KAugBEwH,IAAWC,EAvgBbzH,MAAAA,KAwgBE0H,OAAS,GAxgBX1H,KAygBEkB,MAAQqG,GACNtD,EA1gBJjE,KA0gBmB0H,OAAOvH,OAASwH,EAAaC,EAAatH,GA1gB7DN,KA2gBE0H,QAAUpH,GAEjBiD,EA7gBKvD,KA6gBc,oCA7gBdA,KA8gBEwH,IAAW,IA9gBbxH,KA8gB0B0H,OAASpH,EA9gBnCN,KA+gBE0H,OAAS,GA/gBX1H,KAghBEkB,MAAQqG,GAGjB,SAEF,QACE,MAAM,IAAIM,MAthBH7H,KAshBiB,kBAthBjBA,KAshB4CkB,OAthB5ClB,KA0hBF+B,UA1hBE/B,KA0hBiBO,qBA73ChC,SAA4BhB,GAG1B,IAFA,IAAIuI,EAAaC,KAAKC,IAAI1I,EAAIO,kBAAmB,IAC7CoI,EAAY,EACPhI,EAAI,EAAGC,EAAIH,EAAQI,OAAQF,EAAIC,EAAGD,IAAK,CAC9C,IAAIiI,EAAM3I,EAAOQ,EAAQE,IAAIE,OAC7B,GAAI+H,EAAMJ,EAKR,OAAQ/H,EAAQE,IACd,IAAK,WACHkI,EAAU5I,GACV,MAEF,IAAK,QACHsF,EAAStF,EAAQ,UAAWA,EAAOuF,OACnCvF,EAAOuF,MAAQ,GACf,MAEF,IAAK,SACHD,EAAStF,EAAQ,WAAYA,EAAOsE,QACpCtE,EAAOsE,OAAS,GAChB,MAEF,QACE7C,EAAMzB,EAAQ,+BAAiCQ,EAAQE,IAG7DgI,EAAYF,KAAKC,IAAIC,EAAWC,GAGlC,IAAIE,EAAI9I,EAAIO,kBAAoBoI,EAChC1I,EAAOgB,oBAAsB6H,EAAI7I,EAAOwC,SA61CtCsG,CA3hBWrI,MA6hBb,OA7hBaA,MA1yBbsI,OAAQ,WAAiC,OAAnBtI,KAAKgB,MAAQ,KAAahB,MAChDuI,MAAO,WAAc,OAAOvI,KAAK4C,MAAM,OACvC4F,MAAO,WAjBT,IAAuBjJ,EACrB4I,EADqB5I,EAiBaS,MAfb,KAAjBT,EAAOuF,QACTD,EAAStF,EAAQ,UAAWA,EAAOuF,OACnCvF,EAAOuF,MAAQ,IAEK,KAAlBvF,EAAOsE,SACTgB,EAAStF,EAAQ,WAAYA,EAAOsE,QACpCtE,EAAOsE,OAAS,MAapB,IACE/D,EAAS2I,EAAkB3I,OAC3B,MAAO4I,GACP5I,EAAS,aAGX,IAAI6I,EAAcrJ,EAAI6C,OAAOyG,OAAO,SAAUC,GAC5C,MAAc,UAAPA,GAAyB,QAAPA,IAO3B,SAASlJ,EAAWH,EAAQC,GAC1B,KAAMO,gBAAgBL,GACpB,OAAO,IAAIA,EAAUH,EAAQC,GAG/BK,EAAOgJ,MAAM9I,MAEbA,KAAK+I,QAAU,IAAIrJ,EAAUF,EAAQC,GACrCO,KAAKgJ,UAAW,EAChBhJ,KAAKiJ,UAAW,EAEhB,IAAIC,EAAKlJ,KAETA,KAAK+I,QAAQI,MAAQ,WACnBD,EAAGhH,KAAK,QAGVlC,KAAK+I,QAAQK,QAAU,SAAUC,GAC/BH,EAAGhH,KAAK,QAASmH,GAIjBH,EAAGH,QAAQ/H,MAAQ,MAGrBhB,KAAKsJ,SAAW,KAEhBX,EAAYY,QAAQ,SAAUV,GAC5BtH,OAAOiI,eAAeN,EAAI,KAAOL,GAC/BY,IAAK,WACH,OAAOP,EAAGH,QAAQ,KAAOF,IAE3Ba,IAAK,SAAUC,GACb,IAAKA,EAGH,OAFAT,EAAGU,mBAAmBf,GACtBK,EAAGH,QAAQ,KAAOF,GAAMc,EACjBA,EAETT,EAAGW,GAAGhB,EAAIc,IAEZG,YAAY,EACZC,cAAc,MAKpBpK,EAAU2C,UAAYf,OAAOC,OAAO1B,EAAOwC,WACzC0H,aACElD,MAAOnH,KAIXA,EAAU2C,UAAUM,MAAQ,SAAUqH,GACpC,GAAsB,mBAAXC,QACkB,mBAApBA,OAAOC,UACdD,OAAOC,SAASF,GAAO,CACvB,IAAKjK,KAAKsJ,SAAU,CAClB,IAAIc,EAAKC,EAA0BC,cACnCtK,KAAKsJ,SAAW,IAAIc,EAAG,QAEzBH,EAAOjK,KAAKsJ,SAAS1G,MAAMqH,GAK7B,OAFAjK,KAAK+I,QAAQnG,MAAMqH,EAAKnH,YACxB9C,KAAKkC,KAAK,OAAQ+H,IACX,GAGTtK,EAAU2C,UAAUK,IAAM,SAAUE,GAKlC,OAJIA,GAASA,EAAM1C,QACjBH,KAAK4C,MAAMC,GAEb7C,KAAK+I,QAAQpG,OACN,GAGThD,EAAU2C,UAAUuH,GAAK,SAAUhB,EAAI0B,GACrC,IAAIrB,EAAKlJ,KAST,OARKkJ,EAAGH,QAAQ,KAAOF,KAAoC,IAA7BF,EAAY6B,QAAQ3B,KAChDK,EAAGH,QAAQ,KAAOF,GAAM,WACtB,IAAI4B,EAA4B,IAArBC,UAAUvK,QAAgBuK,UAAU,IAAMjG,MAAMqE,MAAM,KAAM4B,WACvED,EAAKE,OAAO,EAAG,EAAG9B,GAClBK,EAAGhH,KAAK4G,MAAMI,EAAIuB,KAIf3K,EAAOwC,UAAUuH,GAAGe,KAAK1B,EAAIL,EAAI0B,IAK1C,IAAI3F,EAAQ,UACRK,EAAU,UACV4F,EAAgB,uCAChBC,EAAkB,gCAClBjJ,GAAWkJ,IAAKF,EAAelJ,MAAOmJ,GAQtC5G,EAAY,4JAEZ+B,EAAW,gMAEX2B,EAAc,6JACdD,EAAa,iMAEjB,SAASrE,EAAchD,GACrB,MAAa,MAANA,GAAmB,OAANA,GAAoB,OAANA,GAAoB,OAANA,EAGlD,SAAS6E,EAAS7E,GAChB,MAAa,MAANA,GAAmB,MAANA,EAGtB,SAAS6G,EAAa7G,GACpB,MAAa,MAANA,GAAagD,EAAahD,GAGnC,SAAS2D,EAAS+G,EAAO1K,GACvB,OAAO0K,EAAMC,KAAK3K,GAGpB,SAASgH,EAAU0D,EAAO1K,GACxB,OAAQ2D,EAAQ+G,EAAO1K,GAGzB,IAwrCQ4K,EACAC,EACAC,EA1rCJjK,EAAI,EAsTR,IAAK,IAAIkK,KArTT/L,EAAIgM,OACFlK,MAAOD,IACP6B,iBAAkB7B,IAClB+B,KAAM/B,IACNqC,YAAarC,IACbsC,UAAWtC,IACX4C,UAAW5C,IACXiE,iBAAkBjE,IAClB8D,QAAS9D,IACTmE,eAAgBnE,IAChBkE,YAAalE,IACboE,mBAAoBpE,IACpBoK,iBAAkBpK,IAClB4D,QAAS5D,IACTqE,eAAgBrE,IAChBsE,cAAetE,IACfyD,MAAOzD,IACPwE,aAAcxE,IACdyE,eAAgBzE,IAChBkD,UAAWlD,IACX2E,eAAgB3E,IAChB0E,iBAAkB1E,IAClBgD,SAAUhD,IACViF,eAAgBjF,IAChBkF,OAAQlF,IACRsF,YAAatF,IACbyF,sBAAuBzF,IACvBuF,aAAcvF,IACd4F,oBAAqB5F,IACrB+F,oBAAqB/F,IACrB6F,sBAAuB7F,IACvB8F,sBAAuB9F,IACvBiG,sBAAuBjG,IACvB2C,UAAW3C,IACXkG,oBAAqBlG,IACrBwC,OAAQxC,IACRyC,cAAezC,KAGjB7B,EAAImC,cACF+J,IAAO,IACPC,GAAM,IACNC,GAAM,IACNC,KAAQ,IACRC,KAAQ,KAGVtM,EAAIgC,UACFkK,IAAO,IACPC,GAAM,IACNC,GAAM,IACNC,KAAQ,IACRC,KAAQ,IACRC,MAAS,IACTC,OAAU,IACVC,MAAS,IACTC,OAAU,IACVC,MAAS,IACTC,OAAU,IACVC,KAAQ,IACRC,OAAU,IACVC,IAAO,IACPC,OAAU,IACVC,MAAS,IACTC,OAAU,IACVC,KAAQ,IACRC,OAAU,IACVC,MAAS,IACTC,OAAU,IACVC,KAAQ,IACRC,OAAU,IACVC,OAAU,IACVC,MAAS,IACTC,OAAU,IACVC,OAAU,IACVC,OAAU,IACVC,KAAQ,IACRC,MAAS,IACTC,OAAU,IACVC,MAAS,IACTC,OAAU,IACVC,KAAQ,IACRC,OAAU,IACVC,OAAU,IACVC,MAAS,IACTC,MAAS,IACTC,OAAU,IACVC,MAAS,IACTC,OAAU,IACVC,KAAQ,IACRC,OAAU,IACVC,OAAU,IACVC,MAAS,IACTC,OAAU,IACVC,IAAO,IACPC,KAAQ,IACRC,OAAU,IACVC,MAAS,IACTC,OAAU,IACVC,KAAQ,IACRC,OAAU,IACVC,OAAU,IACVC,MAAS,IACTC,OAAU,IACVC,OAAU,IACVC,OAAU,IACVC,KAAQ,IACRC,MAAS,IACTC,MAAS,IACTC,OAAU,IACVC,MAAS,IACTC,OAAU,IACVC,KAAQ,IACRC,OAAU,IACVC,KAAQ,IACRC,KAAQ,IACRC,IAAO,IACPC,KAAQ,IACRC,MAAS,IACTC,KAAQ,IACRC,MAAS,IACTC,OAAU,IACVC,IAAO,IACPC,OAAU,IACVC,KAAQ,IACRC,IAAO,IACPC,KAAQ,IACRC,MAAS,IACTC,IAAO,IACPC,IAAO,IACPC,KAAQ,IACRC,IAAO,IACPC,OAAU,IACVC,KAAQ,IACRC,KAAQ,IACRC,KAAQ,IACRC,MAAS,IACTC,MAAS,IACTC,KAAQ,IACRC,OAAU,IACVC,MAAS,IACTC,KAAQ,IACRC,MAAS,IACTC,OAAU,IACVC,OAAU,IACVC,OAAU,IACVC,OAAU,IACVC,MAAS,IACTC,OAAU,IACVC,MAAS,IACTC,MAAS,IACTC,OAAU,IACVC,OAAU,IACVC,KAAQ,IACRC,KAAQ,IACRC,KAAQ,IACRC,MAAS,IACTC,MAAS,IACTC,KAAQ,IACRC,MAAS,IACTC,MAAS,IACTC,QAAW,IACXC,KAAQ,IACRC,IAAO,IACPC,MAAS,IACTC,KAAQ,IACRC,MAAS,IACTC,OAAU,IACVC,GAAM,IACNC,GAAM,IACNC,GAAM,IACNC,QAAW,IACXC,GAAM,IACNC,IAAO,IACPC,MAAS,IACTC,IAAO,IACPC,QAAW,IACXC,IAAO,IACPC,IAAO,IACPC,IAAO,IACPC,MAAS,IACTC,MAAS,IACTC,KAAQ,IACRC,MAAS,IACTC,MAAS,IACTC,QAAW,IACXC,KAAQ,IACRC,IAAO,IACPC,MAAS,IACTC,KAAQ,IACRC,MAAS,IACTC,OAAU,IACVC,GAAM,IACNC,GAAM,IACNC,GAAM,IACNC,QAAW,IACXC,GAAM,IACNC,IAAO,IACPC,OAAU,IACVC,MAAS,IACTC,IAAO,IACPC,QAAW,IACXC,IAAO,IACPC,IAAO,IACPC,IAAO,IACPC,MAAS,IACTC,SAAY,IACZC,MAAS,IACTC,IAAO,IACPC,KAAQ,KACRC,KAAQ,KACRC,OAAU,KACVC,KAAQ,KACRC,IAAO,KACPC,IAAO,KACPC,IAAO,KACPC,MAAS,KACTC,MAAS,KACTC,MAAS,KACTC,MAAS,KACTC,MAAS,KACTC,MAAS,KACTC,MAAS,KACTC,MAAS,KACTC,OAAU,KACVC,OAAU,KACVC,KAAQ,KACRC,OAAU,KACVC,OAAU,KACVC,MAAS,KACTC,MAAS,KACTC,OAAU,KACVC,OAAU,KACVC,MAAS,KACTC,MAAS,KACTC,KAAQ,KACRC,MAAS,KACTC,OAAU,KACVC,KAAQ,KACRC,MAAS,KACTC,QAAW,KACXC,KAAQ,KACRC,KAAQ,KACRC,KAAQ,KACRC,KAAQ,KACRC,KAAQ,KACRC,MAAS,KACTC,KAAQ,KACRC,KAAQ,KACRC,KAAQ,KACRC,KAAQ,KACRC,KAAQ,KACRC,OAAU,KACVC,KAAQ,KACRC,MAAS,KACTC,MAAS,KACTC,MAAS,KACTC,KAAQ,KACRC,MAAS,KACTC,GAAM,KACNC,KAAQ,KACRC,IAAO,KACPC,MAAS,KACTC,OAAU,KACVC,MAAS,KACTC,KAAQ,KACRC,MAAS,KACTC,IAAO,KACPC,IAAO,KACPC,GAAM,KACNC,IAAO,KACPC,IAAO,KACPC,IAAO,KACPC,OAAU,KACVC,IAAO,KACPC,KAAQ,KACRC,MAAS,KACTC,GAAM,KACNC,MAAS,KACTC,GAAM,KACNC,GAAM,KACNC,IAAO,KACPC,IAAO,KACPC,KAAQ,KACRC,KAAQ,KACRC,KAAQ,KACRC,MAAS,KACTC,OAAU,KACVC,KAAQ,KACRC,KAAQ,KACRC,MAAS,KACTC,MAAS,KACTC,OAAU,KACVC,OAAU,KACVC,KAAQ,KACRC,KAAQ,KACRC,IAAO,KACPC,OAAU,KACVC,MAAS,KACTC,OAAU,KACVC,MAAS,MAGX7Z,OAAOgB,KAAKjD,EAAIgC,UAAUiI,QAAQ,SAAU8R,GAC1C,IAAIC,EAAIhc,EAAIgC,SAAS+Z,GACjBhQ,EAAiB,iBAANiQ,EAAiBC,OAAOC,aAAaF,GAAKA,EACzDhc,EAAIgC,SAAS+Z,GAAOhQ,IAGR/L,EAAIgM,MAChBhM,EAAIgM,MAAMhM,EAAIgM,MAAMD,IAAMA,EAM5B,SAASnJ,EAAM3C,EAAQkc,EAAOxR,GAC5B1K,EAAOkc,IAAUlc,EAAOkc,GAAOxR,GAGjC,SAASpF,EAAUtF,EAAQmc,EAAUzR,GAC/B1K,EAAO6D,UAAU+E,EAAU5I,GAC/B2C,EAAK3C,EAAQmc,EAAUzR,GAGzB,SAAS9B,EAAW5I,GAClBA,EAAO6D,SAAWsC,EAASnG,EAAOE,IAAKF,EAAO6D,UAC1C7D,EAAO6D,UAAUlB,EAAK3C,EAAQ,SAAUA,EAAO6D,UACnD7D,EAAO6D,SAAW,GAGpB,SAASsC,EAAUjG,EAAKkc,GAGtB,OAFIlc,EAAImc,OAAMD,EAAOA,EAAKC,QACtBnc,EAAIoc,YAAWF,EAAOA,EAAKG,QAAQ,OAAQ,MACxCH,EAGT,SAAS3a,EAAOzB,EAAQ8J,GAUtB,OATAlB,EAAU5I,GACNA,EAAOuC,gBACTuH,GAAM,WAAa9J,EAAOyC,KACxB,aAAezC,EAAO0C,OACtB,WAAa1C,EAAOe,GAExB+I,EAAK,IAAIxB,MAAMwB,GACf9J,EAAOyB,MAAQqI,EACfnH,EAAK3C,EAAQ,UAAW8J,GACjB9J,EAGT,SAASoD,EAAKpD,GAYZ,OAXIA,EAAOuB,UAAYvB,EAAOsB,YAAY0C,EAAWhE,EAAQ,qBACxDA,EAAO2B,QAAUC,EAAEC,OACrB7B,EAAO2B,QAAUC,EAAE6B,kBACnBzD,EAAO2B,QAAUC,EAAE+B,MACpBlC,EAAMzB,EAAQ,kBAEhB4I,EAAU5I,GACVA,EAAOe,EAAI,GACXf,EAAOqB,QAAS,EAChBsB,EAAK3C,EAAQ,SACbG,EAAUkL,KAAKrL,EAAQA,EAAOC,OAAQD,EAAOE,KACtCF,EAGT,SAASgE,EAAYhE,EAAQwc,GAC3B,GAAsB,iBAAXxc,KAAyBA,aAAkBG,GACpD,MAAM,IAAImI,MAAM,0BAEdtI,EAAOC,QACTwB,EAAMzB,EAAQwc,GAIlB,SAAS7V,EAAQ3G,GACVA,EAAOC,SAAQD,EAAO6E,QAAU7E,EAAO6E,QAAQ7E,EAAOmB,cAC3D,IAAIsb,EAASzc,EAAOoB,KAAKpB,EAAOoB,KAAKR,OAAS,IAAMZ,EAChDwB,EAAMxB,EAAOwB,KAAQgF,KAAMxG,EAAO6E,QAASyC,eAG3CtH,EAAOE,IAAIkC,QACbZ,EAAIa,GAAKoa,EAAOpa,IAElBrC,EAAOmC,WAAWvB,OAAS,EAC3B0E,EAAStF,EAAQ,iBAAkBwB,GAGrC,SAASkb,EAAOlW,EAAMmW,GACpB,IACIC,EADIpW,EAAKyE,QAAQ,KACF,GAAM,GAAIzE,GAASA,EAAKqW,MAAM,KAC7CC,EAASF,EAAS,GAClBG,EAAQH,EAAS,GAQrB,OALID,GAAsB,UAATnW,IACfsW,EAAS,QACTC,EAAQ,KAGDD,OAAQA,EAAQC,MAAOA,GAGlC,SAAS3V,EAAQpH,GAKf,GAJKA,EAAOC,SACVD,EAAOgH,WAAahH,EAAOgH,WAAWhH,EAAOmB,eAGO,IAAlDnB,EAAOmC,WAAW8I,QAAQjL,EAAOgH,aACnChH,EAAOwB,IAAI8F,WAAWpE,eAAelD,EAAOgH,YAC5ChH,EAAOgH,WAAahH,EAAOiH,YAAc,OAF3C,CAMA,GAAIjH,EAAOE,IAAIkC,MAAO,CACpB,IAAI4a,EAAKN,EAAM1c,EAAOgH,YAAY,GAC9B8V,EAASE,EAAGF,OACZC,EAAQC,EAAGD,MAEf,GAAe,UAAXD,EAEF,GAAc,QAAVC,GAAmB/c,EAAOiH,cAAgBqE,EAC5CtH,EAAWhE,EACT,gCAAkCsL,EAAgB,aACrCtL,EAAOiH,kBACjB,GAAc,UAAV8V,GAAqB/c,EAAOiH,cAAgBsE,EACrDvH,EAAWhE,EACT,kCAAoCuL,EAAkB,aACzCvL,EAAOiH,iBACjB,CACL,IAAIzF,EAAMxB,EAAOwB,IACbib,EAASzc,EAAOoB,KAAKpB,EAAOoB,KAAKR,OAAS,IAAMZ,EAChDwB,EAAIa,KAAOoa,EAAOpa,KACpBb,EAAIa,GAAKL,OAAOC,OAAOwa,EAAOpa,KAEhCb,EAAIa,GAAG0a,GAAS/c,EAAOiH,YAO3BjH,EAAOmC,WAAWgB,MAAMnD,EAAOgH,WAAYhH,EAAOiH,mBAGlDjH,EAAOwB,IAAI8F,WAAWtH,EAAOgH,YAAchH,EAAOiH,YAClD3B,EAAStF,EAAQ,eACfwG,KAAMxG,EAAOgH,WACbO,MAAOvH,EAAOiH,cAIlBjH,EAAOgH,WAAahH,EAAOiH,YAAc,IAG3C,SAASL,EAAS5G,EAAQid,GACxB,GAAIjd,EAAOE,IAAIkC,MAAO,CAEpB,IAAIZ,EAAMxB,EAAOwB,IAGbwb,EAAKN,EAAM1c,EAAO6E,SACtBrD,EAAIsb,OAASE,EAAGF,OAChBtb,EAAIub,MAAQC,EAAGD,MACfvb,EAAI0b,IAAM1b,EAAIa,GAAG2a,EAAGF,SAAW,GAE3Btb,EAAIsb,SAAWtb,EAAI0b,MACrBlZ,EAAWhE,EAAQ,6BACjBmd,KAAKC,UAAUpd,EAAO6E,UACxBrD,EAAI0b,IAAMF,EAAGF,QAGf,IAAIL,EAASzc,EAAOoB,KAAKpB,EAAOoB,KAAKR,OAAS,IAAMZ,EAChDwB,EAAIa,IAAMoa,EAAOpa,KAAOb,EAAIa,IAC9BL,OAAOgB,KAAKxB,EAAIa,IAAI2H,QAAQ,SAAUqT,GACpC/X,EAAStF,EAAQ,mBACf8c,OAAQO,EACRH,IAAK1b,EAAIa,GAAGgb,OAQlB,IAAK,IAAI3c,EAAI,EAAGC,EAAIX,EAAOmC,WAAWvB,OAAQF,EAAIC,EAAGD,IAAK,CACxD,IAAI4c,EAAKtd,EAAOmC,WAAWzB,GACvB8F,EAAO8W,EAAG,GACV/V,EAAQ+V,EAAG,GACXV,EAAWF,EAAMlW,GAAM,GACvBsW,EAASF,EAASE,OAClBC,EAAQH,EAASG,MACjBG,EAAiB,KAAXJ,EAAgB,GAAMtb,EAAIa,GAAGya,IAAW,GAC9C7Z,GACFuD,KAAMA,EACNe,MAAOA,EACPuV,OAAQA,EACRC,MAAOA,EACPG,IAAKA,GAKHJ,GAAqB,UAAXA,IAAuBI,IACnClZ,EAAWhE,EAAQ,6BACjBmd,KAAKC,UAAUN,IACjB7Z,EAAEia,IAAMJ,GAEV9c,EAAOwB,IAAI8F,WAAWd,GAAQvD,EAC9BqC,EAAStF,EAAQ,cAAeiD,GAElCjD,EAAOmC,WAAWvB,OAAS,EAG7BZ,EAAOwB,IAAI+b,gBAAkBN,EAG7Bjd,EAAOuB,SAAU,EACjBvB,EAAOoB,KAAK+B,KAAKnD,EAAOwB,KACxB8D,EAAStF,EAAQ,YAAaA,EAAOwB,KAChCyb,IAEEjd,EAAO0B,UAA6C,WAAjC1B,EAAO6E,QAAQ2Y,cAGrCxd,EAAO2B,MAAQC,EAAE+B,KAFjB3D,EAAO2B,MAAQC,EAAEwC,OAInBpE,EAAOwB,IAAM,KACbxB,EAAO6E,QAAU,IAEnB7E,EAAOgH,WAAahH,EAAOiH,YAAc,GACzCjH,EAAOmC,WAAWvB,OAAS,EAG7B,SAASmG,EAAU/G,GACjB,IAAKA,EAAO6E,QAIV,OAHAb,EAAWhE,EAAQ,0BACnBA,EAAO6D,UAAY,WACnB7D,EAAO2B,MAAQC,EAAE+B,MAInB,GAAI3D,EAAOsE,OAAQ,CACjB,GAAuB,WAAnBtE,EAAO6E,QAIT,OAHA7E,EAAOsE,QAAU,KAAOtE,EAAO6E,QAAU,IACzC7E,EAAO6E,QAAU,QACjB7E,EAAO2B,MAAQC,EAAEwC,QAGnBkB,EAAStF,EAAQ,WAAYA,EAAOsE,QACpCtE,EAAOsE,OAAS,GAKlB,IAAImZ,EAAIzd,EAAOoB,KAAKR,OAChBiE,EAAU7E,EAAO6E,QAChB7E,EAAOC,SACV4E,EAAUA,EAAQ7E,EAAOmB,cAG3B,IADA,IAAIuc,EAAU7Y,EACP4Y,KAAK,CAEV,GADYzd,EAAOoB,KAAKqc,GACdjX,OAASkX,EAIjB,MAFA1Z,EAAWhE,EAAQ,wBAOvB,GAAIyd,EAAI,EAIN,OAHAzZ,EAAWhE,EAAQ,0BAA4BA,EAAO6E,SACtD7E,EAAO6D,UAAY,KAAO7D,EAAO6E,QAAU,SAC3C7E,EAAO2B,MAAQC,EAAE+B,MAGnB3D,EAAO6E,QAAUA,EAEjB,IADA,IAAIiH,EAAI9L,EAAOoB,KAAKR,OACbkL,KAAM2R,GAAG,CACd,IAAIjc,EAAMxB,EAAOwB,IAAMxB,EAAOoB,KAAKuc,MACnC3d,EAAO6E,QAAU7E,EAAOwB,IAAIgF,KAC5BlB,EAAStF,EAAQ,aAAcA,EAAO6E,SAEtC,IAAI+Y,KACJ,IAAK,IAAIld,KAAKc,EAAIa,GAChBub,EAAEld,GAAKc,EAAIa,GAAG3B,GAGhB,IAAI+b,EAASzc,EAAOoB,KAAKpB,EAAOoB,KAAKR,OAAS,IAAMZ,EAChDA,EAAOE,IAAIkC,OAASZ,EAAIa,KAAOoa,EAAOpa,IAExCL,OAAOgB,KAAKxB,EAAIa,IAAI2H,QAAQ,SAAUqT,GACpC,IAAIQ,EAAIrc,EAAIa,GAAGgb,GACf/X,EAAStF,EAAQ,oBAAsB8c,OAAQO,EAAGH,IAAKW,MAInD,IAANJ,IAASzd,EAAOsB,YAAa,GACjCtB,EAAO6E,QAAU7E,EAAOiH,YAAcjH,EAAOgH,WAAa,GAC1DhH,EAAOmC,WAAWvB,OAAS,EAC3BZ,EAAO2B,MAAQC,EAAE+B,KAGnB,SAASuE,EAAalI,GACpB,IAEI8d,EAFA3V,EAASnI,EAAOmI,OAChB4V,EAAW5V,EAAOqV,cAElBQ,EAAS,GAEb,OAAIhe,EAAO+B,SAASoG,GACXnI,EAAO+B,SAASoG,GAErBnI,EAAO+B,SAASgc,GACX/d,EAAO+B,SAASgc,IAGA,OADzB5V,EAAS4V,GACEva,OAAO,KACS,MAArB2E,EAAO3E,OAAO,IAChB2E,EAASA,EAAO8V,MAAM,GAEtBD,GADAF,EAAMI,SAAS/V,EAAQ,KACV5E,SAAS,MAEtB4E,EAASA,EAAO8V,MAAM,GAEtBD,GADAF,EAAMI,SAAS/V,EAAQ,KACV5E,SAAS,MAG1B4E,EAASA,EAAOoU,QAAQ,MAAO,IAC3B4B,MAAML,IAAQE,EAAOR,gBAAkBrV,GACzCnE,EAAWhE,EAAQ,4BACZ,IAAMA,EAAOmI,OAAS,KAGxB6T,OAAOnQ,cAAciS,IAG9B,SAASpa,EAAiB1D,EAAQe,GACtB,MAANA,GACFf,EAAO2B,MAAQC,EAAEsC,UACjBlE,EAAOmE,iBAAmBnE,EAAOwC,UACvBuB,EAAahD,KAGvBiD,EAAWhE,EAAQ,oCACnBA,EAAO6D,SAAW9C,EAClBf,EAAO2B,MAAQC,EAAE+B,MAIrB,SAASH,EAAQF,EAAO5C,GACtB,IAAI0d,EAAS,GAIb,OAHI1d,EAAI4C,EAAM1C,SACZwd,EAAS9a,EAAME,OAAO9C,IAEjB0d,EArVTxc,EAAI7B,EAAIgM,MA23BHiQ,OAAOnQ,gBAEJF,EAAqBqQ,OAAOC,aAC5BrQ,EAAQpD,KAAKoD,MACbC,EAAgB,WAClB,IAEIwS,EACAC,EAFAC,KAGAC,GAAS,EACT5d,EAASuK,UAAUvK,OACvB,IAAKA,EACH,MAAO,GAGT,IADA,IAAIwd,EAAS,KACJI,EAAQ5d,GAAQ,CACvB,IAAI6d,EAAYC,OAAOvT,UAAUqT,IACjC,IACGG,SAASF,IACVA,EAAY,GACZA,EAAY,SACZ7S,EAAM6S,KAAeA,EAErB,MAAMG,WAAW,uBAAyBH,GAExCA,GAAa,MACfF,EAAUpb,KAAKsb,IAIfJ,EAAoC,QADpCI,GAAa,QACiB,IAC9BH,EAAgBG,EAAY,KAAS,MACrCF,EAAUpb,KAAKkb,EAAeC,KAE5BE,EAAQ,IAAM5d,GAAU2d,EAAU3d,OA7BzB,SA8BXwd,GAAUzS,EAAmBpC,MAAM,KAAMgV,GACzCA,EAAU3d,OAAS,GAGvB,OAAOwd,GAGLpc,OAAOiI,eACTjI,OAAOiI,eAAe+R,OAAQ,iBAC5BzU,MAAOsE,EACPrB,cAAc,EACdf,UAAU,IAGZuS,OAAOnQ,cAAgBA,GAxhD/B,CA4hDGgT,4CC1hDDC,YAAa,SAAUjf,GACrB,IAAIic,EAAK1L,KACT,IAAK0L,KAAOjc,EACNA,EAAQqD,eAAe4Y,KACzB1L,EAAK0L,GAAOjc,EAAQic,IAGxB,OAAO1L,GAGT2O,iBAAkB,SAAUC,EAAMnf,GAC1Bmf,KAAQnf,GAAqC,kBAAlBA,EAAQmf,KACvCnf,EAAQmf,IAAQ,IAIpBC,mBAAoB,SAAUpf,GACtB,WAAYA,IAAuC,iBAAnBA,EAAQqf,QAAiD,iBAAnBrf,EAAQqf,UAClFrf,EAAQqf,OAAS,IAIrBC,gBAAiB,SAAUrD,EAAKjc,GACxBic,EAAM,QAASjc,GAA4C,iBAAzBA,EAAQic,EAAM,SACpDjc,EAAQic,EAAM,OAASjc,EAAQuf,QAAU,IAAMtD,EAAMA,IAIzDuD,cAAe,SAAUvD,EAAKjc,GAC5B,OAAOic,EAAM,OAAQjc,MC7Bd,SAAS0H,GAChB,OAAIrC,MAAMoa,QACDpa,MAAMoa,QAAQ/X,GAG4B,mBAA5CvF,OAAOe,UAAUQ,SAAS8H,KAAM9D,IHJvC+X,EAAUpW,EA8Dd,SAASqW,EAASC,EAAMjY,GACtB,IAAIuU,EACJ,GAAIjc,EAAQuf,QAAS,CAUnB,IATKtf,EAAeD,EAAQ2f,EAAO,SAAW3f,EAAQ4f,cACpD3f,EAAeD,EAAQ2f,EAAO,YAE5B1f,EAAeD,EAAQ2f,EAAO,UAAYF,EAAQxf,EAAeD,EAAQ2f,EAAO,WAClF1f,EAAeD,EAAQ2f,EAAO,SAAW1f,EAAeD,EAAQ2f,EAAO,UAErEA,EAAO,OAAQ3f,GAA4B,iBAAV0H,IACnCA,EAAQ1H,EAAQ2f,EAAO,MAAMjY,EAAOzH,IAEzB,gBAAT0f,IAA2B,kBAAmB3f,GAAW,sBAAuBA,GAClF,IAAKic,KAAOvU,EACV,GAAIA,EAAMrE,eAAe4Y,GACvB,GAAI,kBAAmBjc,EACrB0H,EAAMuU,GAAOjc,EAAQ6f,cAAcnY,EAAMuU,GAAMA,EAAKhc,OAC/C,CACL,IAAI6f,EAAOpY,EAAMuU,UACVvU,EAAMuU,GACbvU,EAAM1H,EAAQ+f,kBAAkB9D,EAAK6D,EAAM7f,IAAmB6f,EAKlEL,EAAQxf,EAAeD,EAAQ2f,EAAO,SACxC1f,EAAeD,EAAQ2f,EAAO,QAAQrc,KAAKoE,GAE3CzH,EAAeD,EAAQ2f,EAAO,QAAUjY,MAErC,CACAzH,EAAeD,EAAQggB,eAC1B/f,EAAeD,EAAQggB,iBAEzB,IAAIC,KAEJ,GADAA,EAAQjgB,EAAQkgB,SAAWP,EACd,gBAATA,EAAwB,CAC1B,IAAK1D,KAAOvU,EACV,GAAIA,EAAMrE,eAAe4Y,GACvB,MAGJgE,EAAQjgB,EAAQmgB,SAAW,sBAAuBngB,EAAUA,EAAQ+f,kBAAkB9D,EAAKvU,EAAOzH,GAAkBgc,EAChHjc,EAAQogB,0BACVH,EAAQjgB,EAAQqgB,eAAiB3Y,EAAMuU,GAAKjc,EAAQqgB,eAChD,kBAAmBrgB,IACrBigB,EAAQjgB,EAAQqgB,eAAiBrgB,EAAQ6f,cAAcI,EAAQjgB,EAAQqgB,eAAgBpE,EAAKhc,MAG1F,kBAAmBD,IACrB0H,EAAMuU,GAAOjc,EAAQ6f,cAAcnY,EAAMuU,GAAMA,EAAKhc,IAEtDggB,EAAQjgB,EAAQsgB,gBAAkB5Y,EAAMuU,SAGtC0D,EAAO,OAAQ3f,IACjB0H,EAAQ1H,EAAQ2f,EAAO,MAAMjY,EAAOzH,IAEtCggB,EAAQjgB,EAAQ2f,EAAO,QAAUjY,EAE/B1H,EAAQugB,YACVN,EAAQjgB,EAAQwgB,WAAavgB,GAE/BA,EAAeD,EAAQggB,aAAa1c,KAAK2c,IAI7C,SAASQ,EAAqBhZ,GAK1B,IAAIwU,EADN,GAHI,iBAAkBjc,GAAWyH,IAC/BA,EAAazH,EAAQ0gB,aAAajZ,EAAYxH,KAE3CD,EAAQwc,MAAQ,qBAAsBxc,GAAW,oBAAqBA,IAAYyH,EAErF,IAAKwU,KAAOxU,EACV,GAAIA,EAAWpE,eAAe4Y,KACxBjc,EAAQwc,OAAM/U,EAAWwU,GAAOxU,EAAWwU,GAAKO,QAChD,qBAAsBxc,IAASyH,EAAWwU,GAAOjc,EAAQ2gB,iBAAiBlZ,EAAWwU,GAAMA,EAAKhc,IAChG,oBAAqBD,GAAS,CAChC,IAAI8f,EAAOrY,EAAWwU,UACfxU,EAAWwU,GAClBxU,EAAWzH,EAAQ4gB,gBAAgB3E,EAAKxU,EAAWwU,GAAMhc,IAAmB6f,EAKpF,OAAOrY,EAGT,SAASoZ,EAAcC,GACrB,IAAIrZ,KACJ,GAAIqZ,EAAYla,OAA4C,QAAnCka,EAAYna,KAAKgX,eAA2B3d,EAAQogB,0BAA2B,CAGtG,IAFA,IACIW,EADAC,EAAc,oDAEsC,QAAhDD,EAAQC,EAAYC,KAAKH,EAAYla,QAC3Ca,EAAWsZ,EAAM,IAAMA,EAAM,IAAMA,EAAM,IAAMA,EAAM,GAEvDtZ,EAAagZ,EAAqBhZ,GAEpC,GAAuC,QAAnCqZ,EAAYna,KAAKgX,cAAyB,CAC5C,GAAI3d,EAAQkhB,kBACV,OAEFjhB,EAAeD,EAAQmhB,mBACnBhf,OAAOgB,KAAKsE,GAAY1G,SAC1Bd,EAAeD,EAAQmhB,gBAAgBnhB,EAAQqgB,eAAiB5Y,GAE9DzH,EAAQugB,YACVtgB,EAAeD,EAAQmhB,gBAAgBnhB,EAAQwgB,WAAavgB,OAEzD,CACL,GAAID,EAAQohB,kBACV,OAEEphB,EAAQwc,OACVsE,EAAYla,KAAOka,EAAYla,KAAK4V,QAEtC,IAAI9U,KACA1H,EAAQogB,0BAA4Bje,OAAOgB,KAAKsE,GAAY1G,QAC9D2G,EAAMoZ,EAAYna,SAClBe,EAAMoZ,EAAYna,MAAM3G,EAAQqgB,eAAiB5Y,GAEjDC,EAAMoZ,EAAYna,MAAQma,EAAYla,KAExC8Y,EAAS,cAAehY,IAI5B,SAAS2Z,EAAe1a,EAAMc,GAC5B,IAAIwY,EASJ,GARoB,iBAATtZ,IACTc,EAAad,EAAKc,WAClBd,EAAOA,EAAKA,MAEdc,EAAagZ,EAAqBhZ,GAC9B,kBAAmBzH,IACrB2G,EAAO3G,EAAQshB,cAAc3a,EAAM1G,IAEjCD,EAAQuf,QAAS,CAIjB,IAAItD,EAFN,GADAgE,MACKjgB,EAAQuhB,kBAAoB9Z,GAActF,OAAOgB,KAAKsE,GAAY1G,OAGrE,IAAKkb,KAFLgE,EAAQjgB,EAAQqgB,kBAEJ5Y,EACNA,EAAWpE,eAAe4Y,KAC5BgE,EAAQjgB,EAAQqgB,eAAepE,GAAOxU,EAAWwU,IAIjDtV,KAAQ1G,IAAmBD,EAAQ4f,cACvC3f,EAAe0G,OAEb1G,EAAe0G,KAAU8Y,EAAQxf,EAAe0G,MAClD1G,EAAe0G,IAAS1G,EAAe0G,KAErC8Y,EAAQxf,EAAe0G,IACzB1G,EAAe0G,GAAMrD,KAAK2c,GAE1BhgB,EAAe0G,GAAQsZ,OAGpBhgB,EAAeD,EAAQggB,eAC1B/f,EAAeD,EAAQggB,kBAEzBC,MACQjgB,EAAQkgB,SAAW,UAC3BD,EAAQjgB,EAAQmgB,SAAWxZ,GACtB3G,EAAQuhB,kBAAoB9Z,GAActF,OAAOgB,KAAKsE,GAAY1G,SACrEkf,EAAQjgB,EAAQqgB,eAAiB5Y,GAE/BzH,EAAQwhB,iBACVvB,EAAQjgB,EAAQggB,iBAElB/f,EAAeD,EAAQggB,aAAa1c,KAAK2c,GAGzCA,EAAQjgB,EAAQwgB,WAAavgB,EAE/BA,EAAiBggB,EAGnB,SAASwB,EAAOlF,GACVvc,EAAQ0hB,aAGPnF,EAAKC,QAAWxc,EAAQ2hB,gCAGzB3hB,EAAQwc,OACVD,EAAOA,EAAKC,QAEVxc,EAAQ4hB,aACVrF,EA7MJ,SAAoB7U,GAClB,IAAIma,EAAShD,OAAOnX,GACpB,IAAK4W,MAAMuD,GACT,OAAOA,EAET,IAAIC,EAASpa,EAAMiW,cACnB,MAAe,SAAXmE,GAEkB,UAAXA,GAGJpa,EAkMEka,CAAWrF,IAEhBvc,EAAQ+hB,WACVxF,EAAOA,EAAKG,QAAQ,KAAM,SAASA,QAAQ,KAAM,QAAQA,QAAQ,KAAM,SAEzEgD,EAAS,OAAQnD,IAGnB,SAASyF,EAAUpc,GACb5F,EAAQiiB,gBAGRjiB,EAAQwc,OACV5W,EAAUA,EAAQ4W,QAEpBkD,EAAS,UAAW9Z,IAGtB,SAASsc,EAAavb,GACpB,IAAIwb,EAAgBliB,EAAeD,EAAQwgB,WACtCxgB,EAAQugB,kBACJtgB,EAAeD,EAAQwgB,WAEhCvgB,EAAiBkiB,EAGnB,SAASC,EAAQ1c,GACX1F,EAAQqiB,cAGRriB,EAAQwc,OACV9W,EAAQA,EAAM8W,QAEhBkD,EAAS,QAASha,IAGpB,SAAS4c,EAAUxc,GACb9F,EAAQuiB,gBAGZzc,EAAUA,EAAQ4W,QAAQ,KAAM,IAC5B1c,EAAQwc,OACV1W,EAAUA,EAAQ0W,QAEpBkD,EAAS,UAAW5Z,IAGtB,SAAS0c,EAAQ5gB,GACfA,EAAM6gB,KAAO7gB,EAGf,MAAiB,SAAU+J,EAAK+W,GAE9B,IAAIviB,EAAwBD,EAAIC,QAAO,MACnCoe,KAiCJ,GAhCAte,EAAiBse,EAEjBve,EAhTF,SAAyB0iB,GAuCvB,OAtCA1iB,EAAU2iB,EAAO1D,YAAYyD,GAC7BC,EAAOzD,iBAAiB,oBAAqBlf,GAC7C2iB,EAAOzD,iBAAiB,oBAAqBlf,GAC7C2iB,EAAOzD,iBAAiB,mBAAoBlf,GAC5C2iB,EAAOzD,iBAAiB,aAAclf,GACtC2iB,EAAOzD,iBAAiB,gBAAiBlf,GACzC2iB,EAAOzD,iBAAiB,cAAelf,GACvC2iB,EAAOzD,iBAAiB,gBAAiBlf,GACzC2iB,EAAOzD,iBAAiB,UAAWlf,GACnC2iB,EAAOzD,iBAAiB,cAAelf,GACvC2iB,EAAOzD,iBAAiB,iBAAkBlf,GAC1C2iB,EAAOzD,iBAAiB,YAAalf,GACrC2iB,EAAOzD,iBAAiB,OAAQlf,GAChC2iB,EAAOzD,iBAAiB,aAAclf,GACtC2iB,EAAOzD,iBAAiB,WAAYlf,GACpC2iB,EAAOzD,iBAAiB,2BAA4Blf,GACpD2iB,EAAOzD,iBAAiB,+BAAgClf,GACxD2iB,EAAOrD,gBAAgB,cAAetf,GACtC2iB,EAAOrD,gBAAgB,cAAetf,GACtC2iB,EAAOrD,gBAAgB,aAActf,GACrC2iB,EAAOrD,gBAAgB,OAAQtf,GAC/B2iB,EAAOrD,gBAAgB,UAAWtf,GAClC2iB,EAAOrD,gBAAgB,QAAStf,GAChC2iB,EAAOrD,gBAAgB,UAAWtf,GAClC2iB,EAAOrD,gBAAgB,OAAQtf,GAC/B2iB,EAAOrD,gBAAgB,OAAQtf,GAC/B2iB,EAAOrD,gBAAgB,WAAYtf,GACnC2iB,EAAOrD,gBAAgB,SAAUtf,GACjC2iB,EAAOnD,cAAc,UAAWxf,GAChC2iB,EAAOnD,cAAc,cAAexf,GACpC2iB,EAAOnD,cAAc,QAASxf,GAC9B2iB,EAAOnD,cAAc,UAAWxf,GAChC2iB,EAAOnD,cAAc,OAAQxf,GAC7B2iB,EAAOnD,cAAc,kBAAmBxf,GACxC2iB,EAAOnD,cAAc,cAAexf,GACpC2iB,EAAOnD,cAAc,gBAAiBxf,GACtC2iB,EAAOnD,cAAc,iBAAkBxf,GACvC2iB,EAAOnD,cAAc,aAAcxf,GAC5BA,EAyQG4iB,CAAgBF,GAGxBviB,EAAO0iB,UAAYxB,EACnBlhB,EAAO2iB,OAASrB,EAChBthB,EAAO4iB,UAAYf,EACnB7hB,EAAO6iB,WAAad,EACpB/hB,EAAO6J,QAAUwY,EACjBriB,EAAO8iB,QAAUb,EACjBjiB,EAAO+iB,UAAYZ,EACnBniB,EAAOgjB,wBAA0BtC,EAajC1gB,EAAOqD,MAAMmI,GAAKxC,QAOhBoV,EAAOve,EAAQggB,aAAc,CAC/B,IAAIF,EAAOvB,EAAOve,EAAQggB,oBACnBzB,EAAOve,EAAQggB,aACtBzB,EAAOve,EAAQggB,aAAeF,SACvBvB,EAAOhC,KAGhB,OAAOgC,GI/CT,ICxSW6E,EAQAC,EAcAC,EAQAC,EAyBAC,EAUAC,IC/DM,SAAS9X,EAAK+W,GAC7B,IAAI1iB,EAAS0jB,EAAUlD,EAUvB,OATAxgB,EARF,SAA0B0iB,GACxB,IAAI1iB,EAAU2iB,EAAO1D,YAAYyD,GAEjC,OADAC,EAAOvD,mBAAmBpf,GACnBA,EAKG4iB,CAAgBF,GAC1BgB,EAAKC,EAAOhY,EAAK3L,GACjBwgB,EAAY,YAAaxgB,GAAWA,EAAQuf,QAAU,UAAY,UAE9D,cAAevf,GAAWA,EAAQugB,UAC7BjD,KAAKC,UAAUmG,EAAI,SAAUE,EAAGC,GAAK,OAAOD,IAAMpD,EAAW,IAAMqD,GAAM7jB,EAAQqf,QAEjF/B,KAAKC,UAAUmG,EAAI,KAAM1jB,EAAQqf,SAE9B3C,QAAQ,UAAW,WAAWA,QAAQ,UAAW,aDZ/D,SAAW0G,GACPA,EAAe,OAAI,SACnBA,EAAgB,QAAI,UAFxB,CAGGA,IAAWA,OAKd,SAAWC,GAEPA,EAAoB,IAAI,MAExBA,EAAoB,IAAI,MAExBA,EAAoB,IAAI,MAExBA,EAAoB,IAAI,MAR5B,CASGA,IAAmBA,OAKtB,SAAWC,GAEPA,EAAqB,OAAI,SAF7B,CAGGA,IAAiBA,OAKpB,SAAWC,GACPA,EAAgC,aAAI,eACpCA,EAAyB,MAAI,QAC7BA,EAAiC,cAAI,gBACrCA,EAA4B,SAAI,WAChCA,EAAiC,cAAI,gBACrCA,EAA4B,SAAI,WAChCA,EAAwB,KAAI,OAC5BA,EAA0B,OAAI,SAC9BA,EAAyB,MAAI,QAC7BA,EAA0B,OAAI,SAC9BA,EAA0B,OAAI,SAC9BA,EAA8B,WAAI,aAClCA,EAAkC,eAAI,iBACtCA,EAA0B,OAAI,SAC9BA,EAA4B,SAAI,WAChCA,EAAoC,iBAAI,mBACxCA,EAAyB,MAAI,QAC7BA,EAAwB,KAAI,OAC5BA,EAA4B,SAAI,WAnBpC,CAoBGA,IAAsBA,OAKzB,SAAWC,GACPA,EAAoB,UAAI,YACxBA,EAAoB,UAAI,YACxBA,EAAqB,WAAI,aACzBA,EAAoB,UAAI,YAJ5B,CAKGA,IAAaA,OAKhB,SAAWC,GACPA,EAAaA,EAAwB,UAAI,GAAK,YAC9CA,EAAaA,EAA0B,YAAI,GAAK,cAFpD,CAGGA,IAAiBA,OEpEpB,IAAIK,EAA4B,WAM5B,SAASA,EAAWnY,EAAKoY,QACH,IAAdA,IAAwBA,GAAY,GACxCnjB,KAAKmjB,WAAY,EACbpY,IACA/K,KAAK+K,IAAMA,GACf/K,KAAKmjB,UAAYA,EAkSrB,OA3RAD,EAAW5gB,UAAUoa,KAAO,SAAU3R,GAClC,IAAKA,IAAQ/K,KAAK+K,IACd,UAAWlD,MAAM,0BAErB,IAAIub,EAAYrY,GAAO/K,KAAK+K,IACxBsY,EAASC,EAAoBF,GAC7BzE,SAAS,EACTF,OAAQ,IAER8E,EAAO7G,KAAK8G,MAAMH,GAAQE,KAC1BE,EAAShf,MAAMoa,QAAQ0E,EAAKG,SAAWH,EAAKG,SAAWH,EAAKG,SAChE,OACIC,QAAS3jB,KAAK4jB,WAAWL,GACzBE,OAAQA,EAAOI,IAAI7jB,KAAK8jB,UAAUC,KAAK/jB,SAQ/CkjB,EAAW5gB,UAAUshB,WAAa,SAAUL,GACxC,OAAOA,EAAKS,YAAcT,EAAKS,YAAYL,QAAU,MAOzDT,EAAW5gB,UAAUwhB,UAAY,SAAUJ,GACvC,OACIO,YAAaP,EAAQM,YAAcN,EAAQM,YAAYE,UAAY,MACnEC,QAAST,EAAQM,YAAcN,EAAQM,YAAYG,QAAU,KAC7DC,WAAYV,EAAQM,YAAcN,EAAQM,YAAYI,WAAa,KACnEC,UACIC,GAAIZ,EAAQa,SAASP,YACfN,EAAQa,SAASP,YAAYM,GAC7B,KACNE,WAAYxkB,KAAKykB,mBAAmBf,EAAQa,SAASC,WAAWE,MAChEC,WAAYjB,EAAQa,SAASI,WAC7BC,SAAUlB,EAAQa,SAASM,SAC3BC,iBAAkBpB,EAAQa,SAASO,iBACnCC,SAAUrB,EAAQa,SAASP,YACrBN,EAAQa,SAASP,YAAYe,SAC7B,KACNC,gBAAiBtB,EAAQa,SAASP,YAC5BN,EAAQa,SAASP,YAAYgB,gBAC7B,KACNC,aAAcvB,EAAQa,SAASU,cAEnCC,WAAYxB,EAAQyB,WACdnlB,KAAKolB,gBAAgB1B,EAAQyB,WAAWE,cAE9CC,YAAa5B,EAAQM,YAAYsB,cAQzCpC,EAAW5gB,UAAUmiB,mBAAqB,SAAUc,GAChD,OACI5B,QAAS4B,EAAKvB,YAAcuB,EAAKvB,YAAYL,QAAU,KACvD6B,IAAKxlB,KAAKylB,QAAQF,EAAKG,MAQ/BxC,EAAW5gB,UAAUmjB,QAAU,SAAUE,GAoCrC,OAnCI3lB,KAAKmjB,WACLyC,QAAQC,MAAM,WAAYF,EAAGG,UAG7BxB,GAAIqB,EAAG3B,YAAYM,GACnByB,UACIpC,QAASgC,EAAGG,OAAOE,SAAShC,YACtB2B,EAAGG,OAAOE,SAAShC,YAAYL,QAC/B,KACN5d,KAAM4f,EAAGG,OAAOE,SAASC,QAE7BC,QAASP,EAAGG,OAAOK,QAAQF,OAC3BG,OAAQ5D,EAAO6D,OACfnB,WAAYS,EAAGG,OAAOX,WAAWE,UAC3BrlB,KAAKolB,gBAAgBO,EAAGG,OAAOX,WAAWE,cAEhDiB,SAAUtmB,KAAKumB,cAAcZ,EAAGG,OAAOU,UAAUC,UACjDzlB,MAAO2kB,EAAGG,OAAOje,MAAQ8d,EAAGG,OAAOje,MAAM6e,MAAQ,KACjDC,SAAUhB,EAAGG,OAAOc,SAAWjB,EAAGG,OAAOc,SAASF,MAAQ,KAC1DG,YAAalB,EAAGG,OAAOgB,YAAYJ,MACnCK,WAAYpB,EAAGG,OAAOkB,WAAarB,EAAGG,OAAOkB,WAAWN,MAAQ,KAChEO,SACIngB,MAAO6e,EAAGG,OAAOoB,QAAQR,MACzBS,SAAUxB,EAAGG,OAAOoB,QAAQlD,YACtB2B,EAAGG,OAAOoB,QAAQlD,YAAYmD,SAC9B,KACNC,MAAOzB,EAAGG,OAAOoB,QAAQlD,YACnB2B,EAAGG,OAAOoB,QAAQlD,YAAYoD,MAC9B,MAEVC,OAAQ1B,EAAGG,OAAOwB,OAAOZ,OAASf,EAAGG,OAAOwB,OAAOrB,OACnDsB,YAAa5B,EAAGG,OAAO0B,WACjBxnB,KAAKynB,gBAAgB9B,EAAGG,OAAO0B,kBAW7CtE,EAAW5gB,UAAUikB,cAAgB,SAAUmB,GAC3C,IAAIC,EAAQ3nB,KACR4nB,EAAgBF,EACfjjB,MAAMoa,QAAQ6I,KACfE,GAAiBF,IAErB,IAAIG,KAgBJ,OAfAD,EAAcre,QAAQ,SAAU+c,GAC5B,IAAIhmB,GACAgkB,GAAIgC,EAAStC,YAAcsC,EAAStC,YAAYM,GAAK,KACrDwD,KAAMxB,EAAStC,YAAcsC,EAAStC,YAAY+D,KAAO,KACzDpB,SAAUL,EAAStC,YAAcsC,EAAStC,YAAY2C,SAAW,KACjEqB,WAAY1B,EAAS2B,OAAOjE,YAAYgE,WACxCE,UAAWP,EAAMQ,oBAAoB7B,EAAS2B,OAAOG,eAAeC,UACpEC,YAAaX,EAAMY,iBAAiBjC,EAAS2B,OAAOO,aACpDtD,WAAYoB,EAASmC,mBACrBC,WAAYf,EAAMgB,eAAerC,EAAS2B,OAAOW,WAAWC,WAC5DC,SAAUxC,EAAS2B,OAAOc,SAASrC,MACnCsC,aAActG,EAAauG,QAE/BpB,EAAoBnlB,KAAKpC,KAEtBunB,GAOX3E,EAAW5gB,UAAUqmB,eAAiB,SAAUO,GAC5C,IAAIC,EAAkBD,EACjBzkB,MAAMoa,QAAQqK,KACfC,GAAmBD,IAEvB,IAAIE,KAqBJ,OApBAD,EAAgB5f,QAAQ,SAAU8f,GAC9B,IAAIC,GACAhF,GAAI+E,EAAKrF,YAAcqF,EAAKrF,YAAYM,GAAK,KAC7CiF,OAAQF,EAAKrF,YAAcqF,EAAKrF,YAAYuF,OAAS,KACrDC,MAAOH,EAAKrF,YAAcqF,EAAKrF,YAAYwF,MAAQ,KACnDC,SAAUJ,EAAKrF,YAAcqF,EAAKrF,YAAYyF,SAAW,KACzDC,MAAOL,EAAKrF,YAAcqF,EAAKrF,YAAY0F,MAAQ,KACnD9G,SAAUyG,EAAKrF,YAAcqF,EAAKrF,YAAYjF,KAAO,KACrD4K,aAAcN,EAAKrF,YAAcqF,EAAKrF,YAAY2F,aAAe,KACjEC,QAASP,EAAKrF,YAAcqF,EAAKrF,YAAY4F,QAAU,KACvDC,WAAYR,EAAKrF,YAAcqF,EAAKrF,YAAY6F,WAAa,KAC7DC,WAAYT,EAAKrF,YAAcqF,EAAKrF,YAAY8F,WAAa,KAC7DC,SAAUV,EAAKrF,YAAcqF,EAAKrF,YAAY+F,SAAW,KACzDC,oBAAqBX,EAAKrF,YACpBqF,EAAKrF,YAAYgG,oBACjB,KACNvN,IAAK4M,EAAKpD,QAEdmD,EAAsB1mB,KAAK4mB,KAExBF,GAOXlG,EAAW5gB,UAAU6lB,oBAAsB,SAAU8B,GACjD,IAAIC,EAAqBD,EACpBxlB,MAAMoa,QAAQoL,KACfC,GAAsBD,IAE1B,IAAIE,KAQJ,OAPAD,EAAmB3gB,QAAQ,SAAU6gB,GACjC,IAAId,GACA7M,IAAK2N,EAASnE,OACdxK,MAAO2O,EAASpG,YAAcoG,EAASpG,YAAYvI,MAAQ,MAE/D0O,EAAoBznB,KAAK4mB,KAEtBa,GAOXjH,EAAW5gB,UAAUimB,iBAAmB,SAAU8B,GAC9C,IAAIf,GACAgB,kBACAC,cAAgB9N,IAAK,GAAI6H,GAAI,KAUjC,GARI+F,EAAgBG,eAChBlB,EAAEiB,cACE9N,IAAK4N,EAAgBG,aAAavE,OAClC3B,GAAI+F,EAAgBG,aAAaxG,YAC3BqG,EAAgBG,aAAaxG,YAAYM,GACzC,OAGV+F,EAAgBC,eAAgB,CAChC,IAAIG,EAAgBJ,EAAgBC,eAC/B7lB,MAAMoa,QAAQwL,EAAgBC,kBAC/BG,GAAiBA,IAErBnB,EAAEgB,kBACFG,EAAclhB,QAAQ,SAAUjJ,GACxBgpB,EAAEgB,gBACFhB,EAAEgB,eAAe5nB,MACb+Z,IAAKnc,EAAE2lB,OACP3B,GAAIhkB,EAAE0jB,YAAc1jB,EAAE0jB,YAAYM,GAAK,SAKvD,GAAI+F,EAAgBK,aAAc,CAC9B,IAAIA,EAAeL,EAAgBK,aAC9BjmB,MAAMoa,QAAQwL,EAAgBK,gBAC/BA,GAAgBA,IAEpBpB,EAAEoB,gBACFA,EAAanhB,QAAQ,SAAUjJ,GACvBgpB,EAAEoB,cACFpB,EAAEoB,aAAahoB,MACX+Z,IAAKnc,EAAE2lB,OACP3B,GAAIhkB,EAAE0jB,YAAc1jB,EAAE0jB,YAAYM,GAAK,SAKvD,OAAOgF,GAOXpG,EAAW5gB,UAAU8iB,gBAAkB,SAAUuF,GAC7C,IAAIC,EAAkBD,EACjBlmB,MAAMoa,QAAQ8L,KACfC,GAAmBD,IAEvB,IAAIE,KAQJ,OAPAD,EAAgBrhB,QAAQ,SAAUuhB,GAC9B,IAAIxP,GACAxU,MAAOgkB,EAAUpE,MACjBqE,cAAeD,EAAU9G,YAAc8G,EAAU9G,YAAYjF,KAAO,MAExE8L,EAAsBnoB,KAAK4Y,KAExBuP,GAOX3H,EAAW5gB,UAAUmlB,gBAAkB,SAAUuD,GACzChrB,KAAKmjB,WACLyC,QAAQC,MAAM,mBAAoBmF,EAAgB/E,QACtD,IAAIgF,EAAuBD,EACtBvmB,MAAMoa,QAAQmM,KACfC,GAAwBD,IAE5B,IAAIE,KAMJ,OALAD,EAAqB1hB,QAAQ,SAAU4hB,GACnCD,EAAiBxoB,MACb+Z,IAAK0O,EAAWlF,WAGjBiF,GAEJhI,OAMI,IAAIA"}